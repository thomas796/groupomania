{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostHome.js\";\nimport React, { Component } from 'react';\nimport './PostHome.css';\nimport Axios from 'axios';\n\nclass PostHome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      description: '',\n      selectedFile: 'null',\n      postArray: [],\n      commentIndex: -1,\n      comment: []\n    };\n\n    this.showComment = index => {\n      console.log(index);\n\n      if (this.state.commentIndex === index) {\n        this.setState({\n          commentIndex: -1\n        });\n      } else {\n        this.setState({\n          commentIndex: index\n        });\n      } //add comment of post in comment\n\n    };\n\n    this.addPost = () => {\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n      var formData = new FormData();\n      formData.append(\"image\", this.state.selectedFile);\n      formData.append(\"description\", this.state.description);\n      Axios.post(`${process.env.REACT_APP_API_URL}/addPost/${getToken[0]}`, formData, {\n        headers: {\n          \"Authorization\": `Bearer ${getToken[1]}`\n        }\n      }).then(() => {\n        this.updatePost();\n      });\n    };\n\n    this.fileSelectedHandler = e => {\n      this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n\n    this.handleDescription = e => {\n      const description = e.target.value;\n      this.setState({\n        description\n      });\n    };\n\n    this.addComment = (e, postId) => {\n      if (e.key === 'Enter') {\n        let getTokenStringify = localStorage.getItem(\"token\");\n        let getToken = JSON.parse(getTokenStringify);\n        Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n          postId: postId + '',\n          comment: e.target.value + ''\n        }, {\n          headers: {\n            \"Authorization\": `Bearer ${getToken[1]}`\n          }\n        }).then(response => {\n          console.log(response);\n          let comment = this.state.comment;\n          comment.push([postIde.target.value]);\n          this.setState({\n            comment\n          });\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.updatePost();\n  }\n\n  updatePost() {\n    let getTokenStringify = localStorage.getItem(\"token\");\n    let getToken = JSON.parse(getTokenStringify);\n    Axios.get(`${process.env.REACT_APP_API_URL}/getPost`, {\n      headers: {\n        \"Authorization\": `Bearer ${getToken[1]}`\n      }\n    }).then(response => {\n      let postArray = response.data.reverse();\n      this.setState({\n        postArray\n      });\n    });\n  }\n\n  render() {\n    let test = [];\n    this.state.postArray.forEach((post, postIndex) => {\n      let comment = [];\n\n      if (this.state.commentIndex === postIndex) {\n        let lastComment = [];\n        if (this.state) this.state.comment.forEach(theComment => {\n          lastComment.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            children: theComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 28\n          }, this));\n        });\n        comment.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [lastComment, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addCommentInput\",\n            placeholder: \"ajouter un commentaire...\",\n            onKeyPress: e => this.addComment(e, postIndex)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, 'comment' + postIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 22\n        }, this));\n      }\n\n      test.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"titlePost\",\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"imagePost\",\n            src: post.urlimage,\n            alt: `post ${postIndex}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.showComment(postIndex),\n            className: \"showAddCommentBtn\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), comment]\n      }, 'post' + postIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postView\",\n      children: [test, /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"lastDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"homeBottomBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"inputPost\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"description\",\n            value: this.state.description,\n            placeholder: \"Description\",\n            onChange: this.handleDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.fileSelectedHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addPostBtn\",\n          onClick: this.addPost,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default PostHome;","map":{"version":3,"sources":["/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostHome.js"],"names":["React","Component","Axios","PostHome","state","description","selectedFile","postArray","commentIndex","comment","showComment","index","console","log","setState","addPost","getTokenStringify","localStorage","getItem","getToken","JSON","parse","formData","FormData","append","post","process","env","REACT_APP_API_URL","headers","then","updatePost","fileSelectedHandler","e","target","files","handleDescription","value","addComment","postId","key","response","push","postIde","componentDidMount","get","data","reverse","render","test","forEach","postIndex","lastComment","theComment","urlimage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './PostHome.css';\nimport Axios from 'axios'\n\nclass PostHome extends Component {\n\n  state = {\n    description: '',\n    selectedFile: 'null',\n    postArray: [],\n    commentIndex: -1,\n    comment: []\n}\n\ncomponentDidMount () {\n   this.updatePost()\n}\n\nupdatePost () {\n\n  let getTokenStringify = localStorage.getItem(\"token\");\n  let getToken = JSON.parse(getTokenStringify);\n\n  Axios.get(`${process.env.REACT_APP_API_URL}/getPost`, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n\n      let postArray = response.data.reverse()\n      this.setState({ postArray })\n\n  })\n}\n\nshowComment = (index) => {\n  console.log(index)\n  if (this.state.commentIndex === index) {\n    this.setState({ commentIndex: -1 })\n  } else {\n    this.setState({ commentIndex: index })\n  }\n\n  //add comment of post in comment\n\n}\n\naddPost = () => {\n\n  let getTokenStringify = localStorage.getItem(\"token\");\n  let getToken = JSON.parse(getTokenStringify);\n\n  var formData = new FormData();\n  formData.append(\"image\", this.state.selectedFile);\n  formData.append(\"description\", this.state.description);\n\n  Axios.post(`${process.env.REACT_APP_API_URL}/addPost/${getToken[0]}`, formData, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then(() => {\n          this.updatePost()\n    })\n\n}\n\n\nfileSelectedHandler = (e) => {\n  this.setState({ selectedFile: e.target.files[0] })\n}\n\nhandleDescription = (e) => {\n  const description = e.target.value\n  this.setState({ description })\n}\n\n\naddComment = (e, postId) => {\n\n  if (e.key === 'Enter') {\n\n    let getTokenStringify = localStorage.getItem(\"token\");\n    let getToken = JSON.parse(getTokenStringify);\n\n    Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n      postId: postId+'',\n      comment: e.target.value+''\n    }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n      console.log(response)\n      let comment = this.state.comment\n      comment.push([postIde.target.value])\n      this.setState({ comment })\n    })\n  } \n}\n\n\n render() {\n\n    let test = []\n        \n    this.state.postArray.forEach((post, postIndex) => {\n      \n      let comment = []\n      if (this.state.commentIndex === postIndex) {\n\n        let lastComment = []\n        if (this.state)\n        this.state.comment.forEach(theComment => {\n          lastComment.push(<p>{theComment}</p>)\n        })\n\n        comment.push(<div key={'comment'+postIndex}>\n              {lastComment}\n              <input type=\"text\" className=\"addCommentInput\" placeholder=\"ajouter un commentaire...\" onKeyPress={(e) => this.addComment(e, postIndex)} />\n        </div>)\n      }\n\n      test.push(\n        <div key={'post' + postIndex}>\n        <div className=\"postDiv\">\n          <h1 className=\"titlePost\">{post.description}</h1>\n          <img className=\"imagePost\" src={post.urlimage} alt={`post ${postIndex}`} />\n          <button onClick={() => this.showComment(postIndex)} className=\"showAddCommentBtn\">...</button>\n        </div>\n        {comment}\n        </div>)\n    });\n\n    return (\n          <div id=\"postView\">\n              {test}\n              <div id=\"lastDiv\"></div>\n          <div id=\"homeBottomBar\">\n            <div id=\"inputPost\">\n              <input type=\"text\" id=\"description\" value={this.state.description} placeholder=\"Description\" onChange={this.handleDescription} />\n              <input type=\"file\" onChange={this.fileSelectedHandler}/>\n            </div>\n              <button id=\"addPostBtn\" onClick={this.addPost}>+</button>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default PostHome;\n"]},"metadata":{},"sourceType":"module"}