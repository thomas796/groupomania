{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostHome.js\";\nimport React, { Component } from 'react';\nimport './PostHome.css';\nimport Axios from 'axios';\nimport PostComment from './PostComment';\n\nclass PostHome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      description: '',\n      selectedFile: 'null',\n      postArray: [],\n      showCommentIdPost: -1,\n      comments: []\n    };\n\n    this.addPost = () => {\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n      var formData = new FormData();\n      formData.append(\"image\", this.state.selectedFile);\n      formData.append(\"description\", this.state.description);\n      Axios.post(`${process.env.REACT_APP_API_URL}/addPost/${getToken[0]}`, formData, {\n        headers: {\n          \"Authorization\": `Bearer ${getToken[1]}`\n        }\n      }).then(() => {\n        this.updatePost();\n        this.setState({\n          description: '',\n          selectedFile: null\n        });\n      });\n    };\n\n    this.fileSelectedHandler = e => {\n      this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n\n    this.handleDescription = e => {\n      const description = e.target.value;\n      this.setState({\n        description\n      });\n    };\n\n    this.handleShowComment = postId => {\n      if (this.state.showCommentIdPost === -1) {\n        this.setState({\n          showCommentIdPost: postId\n        });\n        this.getComment(postId);\n      } else {\n        if (this.state.showCommentIdPost === postId) {\n          this.setState({\n            showCommentIdPost: -1\n          });\n        } else {\n          this.setState({\n            showCommentIdPost: postId\n          });\n          this.getComment(postId);\n        }\n      }\n    };\n\n    this.getComment = postId => {\n      this.setState({\n        comments: []\n      });\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n      Axios.get(`${process.env.REACT_APP_API_URL}/getComments/${postId}`, {\n        headers: {\n          \"Authorization\": `Bearer ${getToken[1]}`\n        }\n      }).then(response => {\n        this.setState({\n          comments: response.data\n        });\n      });\n    };\n\n    this.addCommentPress = (e, idposts) => {\n      console.log('heuuuu');\n\n      if (e.key === 'Enter') {\n        let getTokenStringify = localStorage.getItem(\"token\");\n        let getToken = JSON.parse(getTokenStringify);\n        Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n          postId: idposts + '',\n          comment: e.target.value + ''\n        }, {\n          headers: {\n            \"Authorization\": `Bearer ${getToken[1]}`\n          }\n        }).then(response => {\n          // this.getComment()\n          // let comment = this.state.comment\n          // comment.push([e.target.value)\n          this.setState();\n          this.setState({\n            inputCommentValue: ''\n          });\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.updatePost();\n  }\n\n  updatePost() {\n    let getTokenStringify = localStorage.getItem(\"token\");\n    let getToken = JSON.parse(getTokenStringify);\n    Axios.get(`${process.env.REACT_APP_API_URL}/getPost`, {\n      headers: {\n        \"Authorization\": `Bearer ${getToken[1]}`\n      }\n    }).then(response => {\n      let postArray = response.data.reverse();\n      this.setState({\n        postArray\n      });\n    });\n  }\n\n  render() {\n    let addPost = [];\n    this.state.postArray.forEach((post, postIndex) => {\n      const comments = [];\n\n      if (post.idposts === this.state.showCommentIdPost) {\n        comments.push( /*#__PURE__*/_jsxDEV(PostComment, {\n          comments: this.state.comments,\n          idposts: post.idposts,\n          addCommentPress: this.addCommentPress\n        }, 'comment' + postIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this));\n      }\n\n      addPost.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"titlePost\",\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"imagePost\",\n            src: post.urlimage,\n            alt: `post ${postIndex}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleShowComment(post.idposts),\n            className: \"showAddCommentBtn\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), comments]\n      }, 'post' + post.idposts, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postView\",\n      children: [addPost, /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"lastDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"homeBottomBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"inputPost\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"description\",\n            value: this.state.description,\n            placeholder: \"Description\",\n            onChange: this.handleDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.fileSelectedHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addPostBtn\",\n          onClick: this.addPost,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default PostHome;","map":{"version":3,"sources":["/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostHome.js"],"names":["React","Component","Axios","PostComment","PostHome","state","description","selectedFile","postArray","showCommentIdPost","comments","addPost","getTokenStringify","localStorage","getItem","getToken","JSON","parse","formData","FormData","append","post","process","env","REACT_APP_API_URL","headers","then","updatePost","setState","fileSelectedHandler","e","target","files","handleDescription","value","handleShowComment","postId","getComment","get","response","data","addCommentPress","idposts","console","log","key","comment","inputCommentValue","componentDidMount","reverse","render","forEach","postIndex","push","urlimage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './PostHome.css';\nimport Axios from 'axios'\nimport PostComment from './PostComment';\n\nclass PostHome extends Component {\n\n  state = {\n    description: '',\n    selectedFile: 'null',\n    postArray: [],\n    showCommentIdPost: -1,\n    comments: []\n}\n\ncomponentDidMount () {\n   this.updatePost()\n}\n\nupdatePost () {\n\n  let getTokenStringify = localStorage.getItem(\"token\");\n  let getToken = JSON.parse(getTokenStringify);\n\n  Axios.get(`${process.env.REACT_APP_API_URL}/getPost`, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n\n      let postArray = response.data.reverse()\n      this.setState({ postArray })\n\n  })\n}\n\naddPost = () => {\n\n  let getTokenStringify = localStorage.getItem(\"token\");\n  let getToken = JSON.parse(getTokenStringify);\n\n  var formData = new FormData();\n  formData.append(\"image\", this.state.selectedFile);\n  formData.append(\"description\", this.state.description);\n\n  Axios.post(`${process.env.REACT_APP_API_URL}/addPost/${getToken[0]}`, formData, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then(() => {\n          this.updatePost()\n          this.setState({ \n            description: '',\n            selectedFile: null\n          })\n    })\n\n}\n\n\nfileSelectedHandler = (e) => {\n  this.setState({ selectedFile: e.target.files[0] })\n}\n\nhandleDescription = (e) => {\n  const description = e.target.value\n  this.setState({ description })\n}\n\nhandleShowComment = (postId) => {\n\n    if (this.state.showCommentIdPost === -1) {\n      this.setState({ showCommentIdPost: postId })\n      this.getComment(postId)\n    } else {\n      if (this.state.showCommentIdPost === postId) {\n        this.setState({ showCommentIdPost: -1 })\n      } else {\n        this.setState({ showCommentIdPost: postId })\n        this.getComment(postId)\n      }\n    }\n}\n\ngetComment = (postId) => {\n\n    this.setState({ comments: [] })\n\n    let getTokenStringify = localStorage.getItem(\"token\");\n    let getToken = JSON.parse(getTokenStringify);\n\n    Axios.get(`${process.env.REACT_APP_API_URL}/getComments/${postId}`, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n        this.setState({ comments: response.data })\n    })\n\n}\n\naddCommentPress = (e, idposts) => {\n  console.log('heuuuu')\n  if (e.key === 'Enter') {\n\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n\n      Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n          postId: idposts+'',\n          comment: e.target.value+''\n      }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n          \n          // this.getComment()\n          // let comment = this.state.comment\n          // comment.push([e.target.value)\n          this.setState()\n\n          this.setState({ inputCommentValue: '' })\n      })\n\n  } \n}\n\n render() {\n\n    let addPost = []\n        \n    this.state.postArray.forEach((post, postIndex) => {\n      \n      const comments = []\n      if(post.idposts === this.state.showCommentIdPost) {\n        comments.push(\n          <PostComment \n            key={'comment' + postIndex}\n            comments={this.state.comments}\n            idposts={post.idposts}\n            addCommentPress={this.addCommentPress}\n          >\n          </PostComment>\n        )\n      }\n\n      addPost.push(\n        <div key={'post' + post.idposts}>\n        <div className=\"postDiv\">\n          <h1 className=\"titlePost\">{post.description}</h1>\n          <img className=\"imagePost\" src={post.urlimage} alt={`post ${postIndex}`} />\n          <button \n            onClick={() => this.handleShowComment(post.idposts)} \n            className=\"showAddCommentBtn\">\n              ...\n          </button>\n        </div>\n          {comments}\n        </div>)\n\n    });\n\n    return (\n          <div id=\"postView\">\n              {addPost}\n              <div id=\"lastDiv\"></div>\n          <div id=\"homeBottomBar\">\n            <div id=\"inputPost\">\n              <input \n                type=\"text\" \n                id=\"description\" \n                value={this.state.description} \n                placeholder=\"Description\" \n                onChange={this.handleDescription}\n              />\n              <input type=\"file\" onChange={this.fileSelectedHandler}/>\n            </div>\n              <button id=\"addPostBtn\" onClick={this.addPost}>+</button>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default PostHome;\n"]},"metadata":{},"sourceType":"module"}