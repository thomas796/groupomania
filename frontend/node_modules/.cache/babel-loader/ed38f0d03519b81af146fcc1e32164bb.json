{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostHome.js\";\nimport React, { Component } from 'react';\nimport './PostHome.css';\nimport Axios from 'axios';\n\nclass PostHome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      description: '',\n      selectedFile: 'null',\n      postArray: [],\n      currentPostIndex: -1,\n      comment: [],\n      inputCommentValue: ''\n    };\n\n    this.showComment = index => {\n      console.log(index);\n\n      if (this.state.currentPostIndex === index) {\n        this.setState({\n          currentPostIndex: -1\n        });\n      } else {\n        this.setState({\n          currentPostIndex: index\n        });\n      } //add comment of post in comment\n\n    };\n\n    this.addPost = () => {\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n      var formData = new FormData();\n      formData.append(\"image\", this.state.selectedFile);\n      formData.append(\"description\", this.state.description);\n      Axios.post(`${process.env.REACT_APP_API_URL}/addPost/${getToken[0]}`, formData, {\n        headers: {\n          \"Authorization\": `Bearer ${getToken[1]}`\n        }\n      }).then(() => {\n        this.updatePost();\n      });\n    };\n\n    this.fileSelectedHandler = e => {\n      this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n\n    this.handleDescription = e => {\n      const description = e.target.value;\n      this.setState({\n        description\n      });\n    };\n\n    this.addCommentChange = e => {\n      this.setState({\n        inputCommentValue: e.target.value\n      });\n    };\n\n    this.addCommentPress = (e, postId) => {\n      if (e.key === 'Enter') {\n        let getTokenStringify = localStorage.getItem(\"token\");\n        let getToken = JSON.parse(getTokenStringify);\n        Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n          postId: postId + '',\n          comment: e.target.value + ''\n        }, {\n          headers: {\n            \"Authorization\": `Bearer ${getToken[1]}`\n          }\n        }).then(response => {\n          let comment = this.state.comment;\n          comment.push([getToken[0], postId, e.target.value]);\n          this.setState({\n            comment\n          });\n          this.setState({\n            inputCommentValue: ''\n          });\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.updatePost();\n  }\n\n  updatePost() {\n    let getTokenStringify = localStorage.getItem(\"token\");\n    let getToken = JSON.parse(getTokenStringify);\n    Axios.get(`${process.env.REACT_APP_API_URL}/getPost`, {\n      headers: {\n        \"Authorization\": `Bearer ${getToken[1]}`\n      }\n    }).then(response => {\n      let postArray = response.data.reverse();\n      this.setState({\n        postArray\n      });\n    });\n  }\n\n  render() {\n    let test = [];\n    this.state.postArray.forEach((post, postIndex) => {\n      let comment = [];\n\n      if (this.state.currentPostIndex === postIndex) {\n        let lastComment = [];\n        this.state.comment.forEach((theComment, commentIndex) => {\n          if (this.state.currentPostIndex === theComment[1]) {\n            lastComment.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"theComment\",\n              children: theComment[2]\n            }, 'theComment' + commentIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this));\n          }\n        });\n        comment.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [lastComment, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.inputCommentValue,\n            className: \"addCommentInput\",\n            placeholder: \"ajouter un commentaire...\",\n            onChange: e => this.addCommentChange(e),\n            onKeyPress: e => this.addCommentPress(e, postIndex)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, 'comment' + postIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this));\n      }\n\n      test.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"titlePost\",\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"imagePost\",\n            src: post.urlimage,\n            alt: `post ${postIndex}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.showComment(postIndex),\n            className: \"showAddCommentBtn\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), comment]\n      }, 'post' + postIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postView\",\n      children: [test, /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"lastDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"homeBottomBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"inputPost\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"description\",\n            value: this.state.description,\n            placeholder: \"Description\",\n            onChange: this.handleDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.fileSelectedHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addPostBtn\",\n          onClick: this.addPost,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default PostHome;","map":{"version":3,"sources":["/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostHome.js"],"names":["React","Component","Axios","PostHome","state","description","selectedFile","postArray","currentPostIndex","comment","inputCommentValue","showComment","index","console","log","setState","addPost","getTokenStringify","localStorage","getItem","getToken","JSON","parse","formData","FormData","append","post","process","env","REACT_APP_API_URL","headers","then","updatePost","fileSelectedHandler","e","target","files","handleDescription","value","addCommentChange","addCommentPress","postId","key","response","push","componentDidMount","get","data","reverse","render","test","forEach","postIndex","lastComment","theComment","commentIndex","urlimage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './PostHome.css';\nimport Axios from 'axios'\n\nclass PostHome extends Component {\n\n  state = {\n    description: '',\n    selectedFile: 'null',\n    postArray: [],\n    currentPostIndex: -1,\n    comment: [],\n    inputCommentValue: ''\n}\n\ncomponentDidMount () {\n   this.updatePost()\n}\n\nupdatePost () {\n\n  let getTokenStringify = localStorage.getItem(\"token\");\n  let getToken = JSON.parse(getTokenStringify);\n\n  Axios.get(`${process.env.REACT_APP_API_URL}/getPost`, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n\n      let postArray = response.data.reverse()\n      this.setState({ postArray })\n\n  })\n}\n\nshowComment = (index) => {\n  console.log(index)\n  if (this.state.currentPostIndex === index) {\n    this.setState({ currentPostIndex: -1 })\n  } else {\n    this.setState({ currentPostIndex: index })\n  }\n\n  //add comment of post in comment\n\n}\n\naddPost = () => {\n\n  let getTokenStringify = localStorage.getItem(\"token\");\n  let getToken = JSON.parse(getTokenStringify);\n\n  var formData = new FormData();\n  formData.append(\"image\", this.state.selectedFile);\n  formData.append(\"description\", this.state.description);\n\n  Axios.post(`${process.env.REACT_APP_API_URL}/addPost/${getToken[0]}`, formData, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then(() => {\n          this.updatePost()\n    })\n\n}\n\n\nfileSelectedHandler = (e) => {\n  this.setState({ selectedFile: e.target.files[0] })\n}\n\nhandleDescription = (e) => {\n  const description = e.target.value\n  this.setState({ description })\n}\n\n\naddCommentChange = (e) => {\n    this.setState({ inputCommentValue: e.target.value })\n}\n\naddCommentPress = (e, postId) => {\n    if (e.key === 'Enter') {\n\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n\n      Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n        postId: postId+'',\n        comment: e.target.value+''\n      }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n        let comment = this.state.comment\n        comment.push([getToken[0], postId, e.target.value])\n        this.setState({ comment })\n        this.setState({ inputCommentValue: '' })\n      })\n    } \n}\n\n render() {\n\n    let test = []\n        \n    this.state.postArray.forEach((post, postIndex) => {\n      \n      let comment = []\n      if (this.state.currentPostIndex === postIndex) {\n\n        let lastComment = []\n        this.state.comment.forEach((theComment, commentIndex) => {\n          if (this.state.currentPostIndex === theComment[1]) {\n            lastComment.push(\n              <p \n                key={'theComment'+commentIndex} \n                className='theComment'\n              >\n                {theComment[2]}\n              </p>\n            )\n          }\n        })\n              \n        comment.push(\n          <div key={'comment'+postIndex}>\n              {lastComment}\n              <input \n                type=\"text\" \n                value={this.state.inputCommentValue} \n                className=\"addCommentInput\" \n                placeholder=\"ajouter un commentaire...\" \n                onChange={(e) => this.addCommentChange(e)}\n                onKeyPress={(e) => this.addCommentPress(e, postIndex)}\n              />\n          </div>)\n      }\n\n      test.push(\n        <div key={'post' + postIndex}>\n        <div className=\"postDiv\">\n          <h1 className=\"titlePost\">{post.description}</h1>\n          <img className=\"imagePost\" src={post.urlimage} alt={`post ${postIndex}`} />\n          <button \n            onClick={() => this.showComment(postIndex)} className=\"showAddCommentBtn\">...</button>\n        </div>\n        {comment}\n        </div>)\n    });\n\n    return (\n          <div id=\"postView\">\n              {test}\n              <div id=\"lastDiv\"></div>\n          <div id=\"homeBottomBar\">\n            <div id=\"inputPost\">\n              <input type=\"text\" id=\"description\" value={this.state.description} placeholder=\"Description\" onChange={this.handleDescription} />\n              <input type=\"file\" onChange={this.fileSelectedHandler}/>\n            </div>\n              <button id=\"addPostBtn\" onClick={this.addPost}>+</button>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default PostHome;\n"]},"metadata":{},"sourceType":"module"}