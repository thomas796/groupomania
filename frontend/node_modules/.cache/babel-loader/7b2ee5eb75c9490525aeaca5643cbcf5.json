{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostComment.js\";\nimport React, { Component } from 'react';\nimport './PostHome.css';\nimport Axios from 'axios';\n\nclass PostComment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputCommentValue: ''\n    };\n\n    this.addCommentChange = e => {\n      this.setState({\n        inputCommentValue: e.target.value\n      });\n    };\n\n    this.addCommentPress = (e, idposts) => {\n      if (e.key === 'Enter') {\n        let getTokenStringify = localStorage.getItem(\"token\");\n        let getToken = JSON.parse(getTokenStringify);\n        Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n          postId: idposts + '',\n          comment: e.target.value + ''\n        }, {\n          headers: {\n            \"Authorization\": `Bearer ${getToken[1]}`\n          }\n        }).then(response => {\n          // this.getComment()\n          // let comment = this.state.comment\n          // comment.push([e.target.value)\n          this.setState({\n            inputCommentValue: ''\n          });\n        });\n      }\n    };\n  }\n\n  render() {\n    const props = this.props;\n    let comments = [];\n    props.comments.forEach((comment, commentIndex) => {\n      comments.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"theComment\",\n        children: comment.comment\n      }, 'theComment' + commentIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this));\n    });\n\n    if (props.showCommentIdPost === props.idposts) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [comments, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.inputCommentValue,\n          className: \"addCommentInput\",\n          placeholder: \"ajouter un commentaire...\",\n          onChange: e => this.addCommentChange(e),\n          onKeyPress: e => this.addCommentPress(e, props.idposts)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this);\n  }\n\n} //   state = {\n//     description: '',\n//     selectedFile: 'null',\n//     postArray: [],\n//     currentPostIndex: -1,\n//     comment: [],\n//     inputCommentValue: ''\n// }\n// // componentDidMount () {\n// //    this.updatePost()\n// // }\n// showComment = (index) => {\n//   console.log(index)\n//   if (this.state.currentPostIndex === -1) {\n//     this.setState({ currentPostIndex: index })\n//     this.getComment()\n//   } else {\n//     this.setState({ currentPostIndex: -1 })\n//   }\n//   if (this.state.currentPostIndex === index) {\n//   } else {\n//   }\n// }\n// getComment = () => {\n//   console.log('user data et post data '+ this.state.currentPostIndex)\n//   let getTokenStringify = localStorage.getItem(\"token\");\n//   let getToken = JSON.parse(getTokenStringify);\n//   Axios.get(`${process.env.REACT_APP_API_URL}/getComments/${this.state.currentPostIndex}`, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n//       console.log(response.data)\n//   })\n// }\n// addCommentChange = (e) => {\n//     this.setState({ inputCommentValue: e.target.value })\n// }\n// addCommentPress = (e, postId) => {\n//     if (e.key === 'Enter') {\n//       let getTokenStringify = localStorage.getItem(\"token\");\n//       let getToken = JSON.parse(getTokenStringify);\n//       Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n//         postId: postId+'',\n//         comment: e.target.value+''\n//       }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n//         this.getComment()\n//       })\n//     } \n// }\n//  render() {\n//       let comment = []\n//       if (this.state.currentPostIndex === post.idposts) {\n//         let lastComment = []\n//         this.state.comment.forEach((theComment, commentIndex) => {\n//           if (this.state.currentPostIndex === theComment[1]) {\n//             lastComment.push(\n//               <p \n//                 key={'theComment'+commentIndex} \n//                 className='theComment'\n//               >\n//                 {theComment[2]}\n//               </p>\n//             )\n//           }\n//         })\n//         comment.push(\n//           <div key={'comment'+postIndex}>\n//               {lastComment}\n//               <input\n//                 type=\"text\"\n//                 value={this.state.inputCommentValue}\n//                 className=\"addCommentInput\"\n//                 placeholder=\"ajouter un commentaire...\"\n//                 onChange={(e) => this.addCommentChange(e)}\n//                 onKeyPress={(e) => this.addCommentPress(e, postIndex)}\n//               />\n//           </div>)\n//       }\n//     return (\n//         <div>\n//             {comment}\n//         </div>\n//     )\n//   }\n// }\n\n\nexport default PostComment;","map":{"version":3,"sources":["/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostComment.js"],"names":["React","Component","Axios","PostComment","state","inputCommentValue","addCommentChange","e","setState","target","value","addCommentPress","idposts","key","getTokenStringify","localStorage","getItem","getToken","JSON","parse","post","process","env","REACT_APP_API_URL","postId","comment","headers","then","response","render","props","comments","forEach","commentIndex","push","showCommentIdPost"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCG,KAFgC,GAExB;AACJC,MAAAA,iBAAiB,EAAE;AADf,KAFwB;;AAAA,SAMhCC,gBANgC,GAMZC,CAAD,IAAO;AACtB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,iBAAiB,EAAEE,CAAC,CAACE,MAAF,CAASC;AAA9B,OAAd;AACH,KAR+B;;AAAA,SAUhCC,eAVgC,GAUd,CAACJ,CAAD,EAAIK,OAAJ,KAAgB;AAC9B,UAAIL,CAAC,CAACM,GAAF,KAAU,OAAd,EAAuB;AAEnB,YAAIC,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,YAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,iBAAX,CAAf;AAEAZ,QAAAA,KAAK,CAACkB,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,eAAcN,QAAQ,CAAC,CAAD,CAAI,EAAtE,EAAyE;AACrEO,UAAAA,MAAM,EAAEZ,OAAO,GAAC,EADqD;AAErEa,UAAAA,OAAO,EAAElB,CAAC,CAACE,MAAF,CAASC,KAAT,GAAe;AAF6C,SAAzE,EAGG;AAAEgB,UAAAA,OAAO,EAAE;AAAC,6BAAmB,UAAST,QAAQ,CAAC,CAAD,CAAI;AAAzC;AAAX,SAHH,EAG6DU,IAH7D,CAGmEC,QAAD,IAAc;AAE5E;AACA;AACA;AAEA,eAAKpB,QAAL,CAAc;AAAEH,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AACH,SAVD;AAYH;AACJ,KA7B+B;AAAA;;AA+BhCwB,EAAAA,MAAM,GAAG;AAEL,UAAMC,KAAK,GAAG,KAAKA,KAAnB;AAEA,QAAIC,QAAQ,GAAG,EAAf;AAEAD,IAAAA,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuB,CAACP,OAAD,EAAUQ,YAAV,KAA2B;AAE9CF,MAAAA,QAAQ,CAACG,IAAT,eACI;AAAmC,QAAA,SAAS,EAAC,YAA7C;AAAA,kBACKT,OAAO,CAACA;AADb,SAAQ,eAAaQ,YAArB;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KARD;;AAUA,QAAIH,KAAK,CAACK,iBAAN,KAA4BL,KAAK,CAAClB,OAAtC,EAA+C;AAC3C,0BACI;AAAA,mBACKmB,QADL,eAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWC,iBAFtB;AAGI,UAAA,SAAS,EAAC,iBAHd;AAII,UAAA,WAAW,EAAC,2BAJhB;AAKI,UAAA,QAAQ,EAAGE,CAAD,IAAO,KAAKD,gBAAL,CAAsBC,CAAtB,CALrB;AAMI,UAAA,UAAU,EAAGA,CAAD,IAAO,KAAKI,eAAL,CAAqBJ,CAArB,EAAwBuB,KAAK,CAAClB,OAA9B;AANvB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH;;AAED,wBAAQ;AAAA;AAAA;AAAA;AAAA,YAAR;AAEH;;AAjE+B,C,CAqEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeT,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport './PostHome.css';\nimport Axios from 'axios'\n\nclass PostComment extends Component {\n\n    state = {\n        inputCommentValue: ''\n    }\n\n    addCommentChange = (e) => {\n        this.setState({ inputCommentValue: e.target.value })\n    }\n\n    addCommentPress = (e, idposts) => {\n        if (e.key === 'Enter') {\n\n            let getTokenStringify = localStorage.getItem(\"token\");\n            let getToken = JSON.parse(getTokenStringify);\n\n            Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n                postId: idposts+'',\n                comment: e.target.value+''\n            }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n                \n                // this.getComment()\n                // let comment = this.state.comment\n                // comment.push([e.target.value)\n\n                this.setState({ inputCommentValue: '' })\n            })\n\n        } \n    }\n\n    render() {\n\n        const props = this.props\n\n        let comments = []\n\n        props.comments.forEach((comment, commentIndex) => {\n\n            comments.push(\n                <p key={'theComment'+commentIndex} className='theComment'>\n                    {comment.comment}\n                </p>\n            )\n\n        })\n\n        if (props.showCommentIdPost === props.idposts) {\n            return (\n                <div>\n                    {comments}\n                    <input\n                        type=\"text\"\n                        value={this.state.inputCommentValue}\n                        className=\"addCommentInput\"\n                        placeholder=\"ajouter un commentaire...\"\n                        onChange={(e) => this.addCommentChange(e)}\n                        onKeyPress={(e) => this.addCommentPress(e, props.idposts)}\n                    />\n                </div>\n            )\n        }\n\n        return (<div></div>)\n\n    }\n}\n\n\n//   state = {\n//     description: '',\n//     selectedFile: 'null',\n//     postArray: [],\n//     currentPostIndex: -1,\n//     comment: [],\n//     inputCommentValue: ''\n// }\n\n// // componentDidMount () {\n// //    this.updatePost()\n// // }\n\n// showComment = (index) => {\n\n//   console.log(index)\n//   if (this.state.currentPostIndex === -1) {\n//     this.setState({ currentPostIndex: index })\n//     this.getComment()\n//   } else {\n//     this.setState({ currentPostIndex: -1 })\n//   }\n  \n//   if (this.state.currentPostIndex === index) {\n//   } else {\n  \n//   }\n\n// }\n\n// getComment = () => {\n\n//   console.log('user data et post data '+ this.state.currentPostIndex)\n\n//   let getTokenStringify = localStorage.getItem(\"token\");\n//   let getToken = JSON.parse(getTokenStringify);\n\n//   Axios.get(`${process.env.REACT_APP_API_URL}/getComments/${this.state.currentPostIndex}`, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n//       console.log(response.data)\n//   })\n// }\n\n// addCommentChange = (e) => {\n//     this.setState({ inputCommentValue: e.target.value })\n// }\n\n// addCommentPress = (e, postId) => {\n//     if (e.key === 'Enter') {\n\n//       let getTokenStringify = localStorage.getItem(\"token\");\n//       let getToken = JSON.parse(getTokenStringify);\n\n//       Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n//         postId: postId+'',\n//         comment: e.target.value+''\n//       }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n        \n//         this.getComment()\n\n//       })\n//     } \n// }\n\n//  render() {\n\n      \n//       let comment = []\n//       if (this.state.currentPostIndex === post.idposts) {\n\n//         let lastComment = []\n//         this.state.comment.forEach((theComment, commentIndex) => {\n//           if (this.state.currentPostIndex === theComment[1]) {\n//             lastComment.push(\n//               <p \n//                 key={'theComment'+commentIndex} \n//                 className='theComment'\n//               >\n//                 {theComment[2]}\n//               </p>\n//             )\n//           }\n//         })\n              \n//         comment.push(\n//           <div key={'comment'+postIndex}>\n//               {lastComment}\n//               <input\n//                 type=\"text\"\n//                 value={this.state.inputCommentValue}\n//                 className=\"addCommentInput\"\n//                 placeholder=\"ajouter un commentaire...\"\n//                 onChange={(e) => this.addCommentChange(e)}\n//                 onKeyPress={(e) => this.addCommentPress(e, postIndex)}\n//               />\n//           </div>)\n//       }\n\n    \n  \n\n//     return (\n//         <div>\n//             {comment}\n//         </div>\n//     )\n//   }\n// }\n\nexport default PostComment;"]},"metadata":{},"sourceType":"module"}