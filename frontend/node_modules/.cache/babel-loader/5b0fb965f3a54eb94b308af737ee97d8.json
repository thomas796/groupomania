{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostComment.js\";\nimport React, { Component } from 'react';\nimport './PostHome.css';\n\nclass PostComment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputCommentValue: ''\n    };\n\n    this.addCommentChange = e => {\n      this.setState({\n        inputCommentValue: e.target.value\n      });\n    };\n\n    this.addCommentPress = (e, postId) => {\n      if (e.key === 'Enter') {\n        // let getTokenStringify = localStorage.getItem(\"token\");\n        // let getToken = JSON.parse(getTokenStringify);\n        // Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n        //     postId: postId+'',\n        //     comment: e.target.value+''\n        // }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n        //     this.getComment()\n        // })\n        this.setState({\n          inputCommentValue: ''\n        });\n      }\n    };\n  }\n\n  render() {\n    const props = this.props;\n    console.log(props);\n    let lastComment = [];\n    this.state.comment.forEach((theComment, commentIndex) => {\n      if (this.state.currentPostIndex === theComment[1]) {\n        lastComment.push( /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"theComment\",\n          children: theComment[2]\n        }, 'theComment' + commentIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this));\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.inputCommentValue,\n        className: \"addCommentInput\",\n        placeholder: \"ajouter un commentaire...\",\n        onChange: e => this.addCommentChange(e),\n        onKeyPress: e => this.addCommentPress(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n} //   state = {\n//     description: '',\n//     selectedFile: 'null',\n//     postArray: [],\n//     currentPostIndex: -1,\n//     comment: [],\n//     inputCommentValue: ''\n// }\n// // componentDidMount () {\n// //    this.updatePost()\n// // }\n// showComment = (index) => {\n//   console.log(index)\n//   if (this.state.currentPostIndex === -1) {\n//     this.setState({ currentPostIndex: index })\n//     this.getComment()\n//   } else {\n//     this.setState({ currentPostIndex: -1 })\n//   }\n//   if (this.state.currentPostIndex === index) {\n//   } else {\n//   }\n// }\n// getComment = () => {\n//   console.log('user data et post data '+ this.state.currentPostIndex)\n//   let getTokenStringify = localStorage.getItem(\"token\");\n//   let getToken = JSON.parse(getTokenStringify);\n//   Axios.get(`${process.env.REACT_APP_API_URL}/getComments/${this.state.currentPostIndex}`, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n//       console.log(response.data)\n//   })\n// }\n// addCommentChange = (e) => {\n//     this.setState({ inputCommentValue: e.target.value })\n// }\n// addCommentPress = (e, postId) => {\n//     if (e.key === 'Enter') {\n//       let getTokenStringify = localStorage.getItem(\"token\");\n//       let getToken = JSON.parse(getTokenStringify);\n//       Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n//         postId: postId+'',\n//         comment: e.target.value+''\n//       }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n//         this.getComment()\n//       })\n//     } \n// }\n//  render() {\n//       let comment = []\n//       if (this.state.currentPostIndex === post.idposts) {\n//         let lastComment = []\n//         this.state.comment.forEach((theComment, commentIndex) => {\n//           if (this.state.currentPostIndex === theComment[1]) {\n//             lastComment.push(\n//               <p \n//                 key={'theComment'+commentIndex} \n//                 className='theComment'\n//               >\n//                 {theComment[2]}\n//               </p>\n//             )\n//           }\n//         })\n//         comment.push(\n//           <div key={'comment'+postIndex}>\n//               {lastComment}\n//               <input\n//                 type=\"text\"\n//                 value={this.state.inputCommentValue}\n//                 className=\"addCommentInput\"\n//                 placeholder=\"ajouter un commentaire...\"\n//                 onChange={(e) => this.addCommentChange(e)}\n//                 onKeyPress={(e) => this.addCommentPress(e, postIndex)}\n//               />\n//           </div>)\n//       }\n//     return (\n//         <div>\n//             {comment}\n//         </div>\n//     )\n//   }\n// }\n\n\nexport default PostComment;","map":{"version":3,"sources":["/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostComment.js"],"names":["React","Component","PostComment","state","inputCommentValue","addCommentChange","e","setState","target","value","addCommentPress","postId","key","render","props","console","log","lastComment","comment","forEach","theComment","commentIndex","currentPostIndex","push","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCE,KAFgC,GAExB;AACJC,MAAAA,iBAAiB,EAAE;AADf,KAFwB;;AAAA,SAMhCC,gBANgC,GAMZC,CAAD,IAAO;AACtB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,iBAAiB,EAAEE,CAAC,CAACE,MAAF,CAASC;AAA9B,OAAd;AACH,KAR+B;;AAAA,SAUhCC,eAVgC,GAUd,CAACJ,CAAD,EAAIK,MAAJ,KAAe;AAC7B,UAAIL,CAAC,CAACM,GAAF,KAAU,OAAd,EAAuB;AAEnB;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA,aAAKL,QAAL,CAAc;AAAEH,UAAAA,iBAAiB,EAAE;AAArB,SAAd;AAEH;AACJ,KA3B+B;AAAA;;AA6BhCS,EAAAA,MAAM,GAAG;AAEL,UAAMC,KAAK,GAAG,KAAKA,KAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAMI,QAAIG,WAAW,GAAG,EAAlB;AACA,SAAKd,KAAL,CAAWe,OAAX,CAAmBC,OAAnB,CAA2B,CAACC,UAAD,EAAaC,YAAb,KAA8B;AACzD,UAAI,KAAKlB,KAAL,CAAWmB,gBAAX,KAAgCF,UAAU,CAAC,CAAD,CAA9C,EAAmD;AAC/CH,QAAAA,WAAW,CAACM,IAAZ,eACA;AAEI,UAAA,SAAS,EAAC,YAFd;AAAA,oBAIKH,UAAU,CAAC,CAAD;AAJf,WACS,eAAaC,YADtB;AAAA;AAAA;AAAA;AAAA,gBADA;AAQH;AACA,KAXD;AAeJ,wBAEI;AAAA,8BACI;AAAA,kBAAKP,KAAK,CAACU;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,iBAFtB;AAGI,QAAA,SAAS,EAAC,iBAHd;AAII,QAAA,WAAW,EAAC,2BAJhB;AAKI,QAAA,QAAQ,EAAGE,CAAD,IAAO,KAAKD,gBAAL,CAAsBC,CAAtB,CALrB;AAMI,QAAA,UAAU,EAAGA,CAAD,IAAO,KAAKI,eAAL,CAAqBJ,CAArB;AANvB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAcH;;AApE+B,C,CAwEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeJ,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport './PostHome.css';\n\nclass PostComment extends Component {\n\n    state = {\n        inputCommentValue: ''\n    }\n\n    addCommentChange = (e) => {\n        this.setState({ inputCommentValue: e.target.value })\n    }\n\n    addCommentPress = (e, postId) => {\n        if (e.key === 'Enter') {\n\n            // let getTokenStringify = localStorage.getItem(\"token\");\n            // let getToken = JSON.parse(getTokenStringify);\n\n            // Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n            //     postId: postId+'',\n            //     comment: e.target.value+''\n            // }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n                \n            //     this.getComment()\n\n            // })\n            this.setState({ inputCommentValue: '' })\n\n        } \n    }\n\n    render() {\n\n        const props = this.props\n        console.log(props)\n\n\n\n        \n\n            let lastComment = []\n            this.state.comment.forEach((theComment, commentIndex) => {\n            if (this.state.currentPostIndex === theComment[1]) {\n                lastComment.push(\n                <p \n                    key={'theComment'+commentIndex} \n                    className='theComment'\n                >\n                    {theComment[2]}\n                </p>\n                )\n            }\n            })\n                \n\n\n        return (\n            \n            <div>\n                <h1>{props.text}</h1>\n                <input\n                    type=\"text\"\n                    value={this.state.inputCommentValue}\n                    className=\"addCommentInput\"\n                    placeholder=\"ajouter un commentaire...\"\n                    onChange={(e) => this.addCommentChange(e)}\n                    onKeyPress={(e) => this.addCommentPress(e)}\n                />\n            </div>\n        )\n    }\n}\n\n\n//   state = {\n//     description: '',\n//     selectedFile: 'null',\n//     postArray: [],\n//     currentPostIndex: -1,\n//     comment: [],\n//     inputCommentValue: ''\n// }\n\n// // componentDidMount () {\n// //    this.updatePost()\n// // }\n\n// showComment = (index) => {\n\n//   console.log(index)\n//   if (this.state.currentPostIndex === -1) {\n//     this.setState({ currentPostIndex: index })\n//     this.getComment()\n//   } else {\n//     this.setState({ currentPostIndex: -1 })\n//   }\n  \n//   if (this.state.currentPostIndex === index) {\n//   } else {\n  \n//   }\n\n// }\n\n// getComment = () => {\n\n//   console.log('user data et post data '+ this.state.currentPostIndex)\n\n//   let getTokenStringify = localStorage.getItem(\"token\");\n//   let getToken = JSON.parse(getTokenStringify);\n\n//   Axios.get(`${process.env.REACT_APP_API_URL}/getComments/${this.state.currentPostIndex}`, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n//       console.log(response.data)\n//   })\n// }\n\n// addCommentChange = (e) => {\n//     this.setState({ inputCommentValue: e.target.value })\n// }\n\n// addCommentPress = (e, postId) => {\n//     if (e.key === 'Enter') {\n\n//       let getTokenStringify = localStorage.getItem(\"token\");\n//       let getToken = JSON.parse(getTokenStringify);\n\n//       Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n//         postId: postId+'',\n//         comment: e.target.value+''\n//       }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n        \n//         this.getComment()\n\n//       })\n//     } \n// }\n\n//  render() {\n\n      \n//       let comment = []\n//       if (this.state.currentPostIndex === post.idposts) {\n\n//         let lastComment = []\n//         this.state.comment.forEach((theComment, commentIndex) => {\n//           if (this.state.currentPostIndex === theComment[1]) {\n//             lastComment.push(\n//               <p \n//                 key={'theComment'+commentIndex} \n//                 className='theComment'\n//               >\n//                 {theComment[2]}\n//               </p>\n//             )\n//           }\n//         })\n              \n//         comment.push(\n//           <div key={'comment'+postIndex}>\n//               {lastComment}\n//               <input\n//                 type=\"text\"\n//                 value={this.state.inputCommentValue}\n//                 className=\"addCommentInput\"\n//                 placeholder=\"ajouter un commentaire...\"\n//                 onChange={(e) => this.addCommentChange(e)}\n//                 onKeyPress={(e) => this.addCommentPress(e, postIndex)}\n//               />\n//           </div>)\n//       }\n\n    \n  \n\n//     return (\n//         <div>\n//             {comment}\n//         </div>\n//     )\n//   }\n// }\n\nexport default PostComment;"]},"metadata":{},"sourceType":"module"}