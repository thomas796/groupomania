{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostComment.js\";\nimport React, { Component } from 'react';\nimport './PostHome.css';\n\nclass PostComment extends Component {\n  render() {\n    const props = this.props;\n    console.log(props); //         let comment = []\n    //         if (this.state.currentPostIndex === post.idposts) {\n    //             let lastComment = []\n    //             this.state.comment.forEach((theComment, commentIndex) => {\n    //             if (this.state.currentPostIndex === theComment[1]) {\n    //                 lastComment.push(\n    //                 <p \n    //                     key={'theComment'+commentIndex} \n    //                     className='theComment'\n    //                 >\n    //                     {theComment[2]}\n    //                 </p>\n    //                 )\n    //             }\n    //             })\n    //             comment.push(\n    // )\n    //         }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.inputCommentValue,\n          className: \"addCommentInput\",\n          placeholder: \"ajouter un commentaire...\",\n          onChange: e => this.addCommentChange(e),\n          onKeyPress: e => this.addCommentPress(e, postIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, 'comment' + props.post, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, 'jkkjsd', true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n} //   state = {\n//     description: '',\n//     selectedFile: 'null',\n//     postArray: [],\n//     currentPostIndex: -1,\n//     comment: [],\n//     inputCommentValue: ''\n// }\n// // componentDidMount () {\n// //    this.updatePost()\n// // }\n// showComment = (index) => {\n//   console.log(index)\n//   if (this.state.currentPostIndex === -1) {\n//     this.setState({ currentPostIndex: index })\n//     this.getComment()\n//   } else {\n//     this.setState({ currentPostIndex: -1 })\n//   }\n//   if (this.state.currentPostIndex === index) {\n//   } else {\n//   }\n// }\n// getComment = () => {\n//   console.log('user data et post data '+ this.state.currentPostIndex)\n//   let getTokenStringify = localStorage.getItem(\"token\");\n//   let getToken = JSON.parse(getTokenStringify);\n//   Axios.get(`${process.env.REACT_APP_API_URL}/getComments/${this.state.currentPostIndex}`, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n//       console.log(response.data)\n//   })\n// }\n// addCommentChange = (e) => {\n//     this.setState({ inputCommentValue: e.target.value })\n// }\n// addCommentPress = (e, postId) => {\n//     if (e.key === 'Enter') {\n//       let getTokenStringify = localStorage.getItem(\"token\");\n//       let getToken = JSON.parse(getTokenStringify);\n//       Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n//         postId: postId+'',\n//         comment: e.target.value+''\n//       }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n//         this.getComment()\n//       })\n//     } \n// }\n//  render() {\n//       let comment = []\n//       if (this.state.currentPostIndex === post.idposts) {\n//         let lastComment = []\n//         this.state.comment.forEach((theComment, commentIndex) => {\n//           if (this.state.currentPostIndex === theComment[1]) {\n//             lastComment.push(\n//               <p \n//                 key={'theComment'+commentIndex} \n//                 className='theComment'\n//               >\n//                 {theComment[2]}\n//               </p>\n//             )\n//           }\n//         })\n//         comment.push(\n//           <div key={'comment'+postIndex}>\n//               {lastComment}\n//               <input\n//                 type=\"text\"\n//                 value={this.state.inputCommentValue}\n//                 className=\"addCommentInput\"\n//                 placeholder=\"ajouter un commentaire...\"\n//                 onChange={(e) => this.addCommentChange(e)}\n//                 onKeyPress={(e) => this.addCommentPress(e, postIndex)}\n//               />\n//           </div>)\n//       }\n//     return (\n//         <div>\n//             {comment}\n//         </div>\n//     )\n//   }\n// }\n\n\nexport default PostComment;","map":{"version":3,"sources":["/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostComment.js"],"names":["React","Component","PostComment","render","props","console","log","text","state","inputCommentValue","e","addCommentChange","addCommentPress","postIndex","post"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAGhCE,EAAAA,MAAM,GAAG;AAEL,UAAMC,KAAK,GAAG,KAAKA,KAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAHK,CAKb;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAGQ,wBACI;AAAA,8BACI;AAAA,kBAAKA,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,iBAFtB;AAGI,UAAA,SAAS,EAAC,iBAHd;AAII,UAAA,WAAW,EAAC,2BAJhB;AAKI,UAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKC,gBAAL,CAAsBD,CAAtB,CALrB;AAMI,UAAA,UAAU,EAAGA,CAAD,IAAO,KAAKE,eAAL,CAAqBF,CAArB,EAAwBG,SAAxB;AANvB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAU,YAAUT,KAAK,CAACU,IAA1B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,OAAU,QAAV;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AA9C+B,C,CAkDpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeZ,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport './PostHome.css';\n\nclass PostComment extends Component {\n\n\n    render() {\n\n        const props = this.props\n        console.log(props)\n\n//         let comment = []\n//         if (this.state.currentPostIndex === post.idposts) {\n\n//             let lastComment = []\n//             this.state.comment.forEach((theComment, commentIndex) => {\n//             if (this.state.currentPostIndex === theComment[1]) {\n//                 lastComment.push(\n//                 <p \n//                     key={'theComment'+commentIndex} \n//                     className='theComment'\n//                 >\n//                     {theComment[2]}\n//                 </p>\n//                 )\n//             }\n//             })\n                \n//             comment.push(\n// )\n//         }\n\n\n        return (\n            <div key={'jkkjsd'}>\n                <h1>{props.text}</h1>\n\n                <div key={'comment'+props.post}>\n                    <input\n                        type=\"text\"\n                        value={this.state.inputCommentValue}\n                        className=\"addCommentInput\"\n                        placeholder=\"ajouter un commentaire...\"\n                        onChange={(e) => this.addCommentChange(e)}\n                        onKeyPress={(e) => this.addCommentPress(e, postIndex)}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\n\n//   state = {\n//     description: '',\n//     selectedFile: 'null',\n//     postArray: [],\n//     currentPostIndex: -1,\n//     comment: [],\n//     inputCommentValue: ''\n// }\n\n// // componentDidMount () {\n// //    this.updatePost()\n// // }\n\n// showComment = (index) => {\n\n//   console.log(index)\n//   if (this.state.currentPostIndex === -1) {\n//     this.setState({ currentPostIndex: index })\n//     this.getComment()\n//   } else {\n//     this.setState({ currentPostIndex: -1 })\n//   }\n  \n//   if (this.state.currentPostIndex === index) {\n//   } else {\n  \n//   }\n\n// }\n\n// getComment = () => {\n\n//   console.log('user data et post data '+ this.state.currentPostIndex)\n\n//   let getTokenStringify = localStorage.getItem(\"token\");\n//   let getToken = JSON.parse(getTokenStringify);\n\n//   Axios.get(`${process.env.REACT_APP_API_URL}/getComments/${this.state.currentPostIndex}`, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n//       console.log(response.data)\n//   })\n// }\n\n// addCommentChange = (e) => {\n//     this.setState({ inputCommentValue: e.target.value })\n// }\n\n// addCommentPress = (e, postId) => {\n//     if (e.key === 'Enter') {\n\n//       let getTokenStringify = localStorage.getItem(\"token\");\n//       let getToken = JSON.parse(getTokenStringify);\n\n//       Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n//         postId: postId+'',\n//         comment: e.target.value+''\n//       }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n        \n//         this.getComment()\n\n//       })\n//     } \n// }\n\n//  render() {\n\n      \n//       let comment = []\n//       if (this.state.currentPostIndex === post.idposts) {\n\n//         let lastComment = []\n//         this.state.comment.forEach((theComment, commentIndex) => {\n//           if (this.state.currentPostIndex === theComment[1]) {\n//             lastComment.push(\n//               <p \n//                 key={'theComment'+commentIndex} \n//                 className='theComment'\n//               >\n//                 {theComment[2]}\n//               </p>\n//             )\n//           }\n//         })\n              \n//         comment.push(\n//           <div key={'comment'+postIndex}>\n//               {lastComment}\n//               <input\n//                 type=\"text\"\n//                 value={this.state.inputCommentValue}\n//                 className=\"addCommentInput\"\n//                 placeholder=\"ajouter un commentaire...\"\n//                 onChange={(e) => this.addCommentChange(e)}\n//                 onKeyPress={(e) => this.addCommentPress(e, postIndex)}\n//               />\n//           </div>)\n//       }\n\n    \n  \n\n//     return (\n//         <div>\n//             {comment}\n//         </div>\n//     )\n//   }\n// }\n\nexport default PostComment;"]},"metadata":{},"sourceType":"module"}