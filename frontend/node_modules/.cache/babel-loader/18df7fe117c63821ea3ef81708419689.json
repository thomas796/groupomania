{"ast":null,"code":"const initState = {\n  user: {\n    id: 0,\n    username: '',\n    password: '',\n    age: 0,\n    mail: '',\n    department: ''\n  }\n};\n\nconst rootReducer = (state = initState, action) => {\n  console.log('heuu');\n\n  if (action.type === 'INCREMENT') {\n    let newUser = [...state.user];\n    return { ...state,\n      user: newUser\n    };\n  }\n\n  return state;\n};\n\nexport default rootReducer; // const initState = {\n//     posts: [\n//         {\n//             id: \"1\",\n//             title: \"je suis le premier article\",\n//             body: \"Voici le contenu de notre premier article, aha !\"\n//         },\n//         {\n//             id: \"2\",\n//             title: \"je suis le deuxieme article\",\n//             body: \"Voici le contenu de notre premier article, aha !\"\n//         },\n//         {\n//             id: \"3\",\n//             title: \"je suis le troisième article\",\n//             body: \"Voici le contenu de notre premier article, aha !\"\n//         },\n//         {\n//             id: \"4\",\n//             title: \"je suis le quatrième article\",\n//             body: \"Voici le contenu de notre premier article, aha !\"\n//         },\n//         {\n//             id: \"5\",\n//             title: \"je suis le quatrième article\",\n//             body: \"Voici le contenu de notre premier article, aha !\"\n//         },\n//         {\n//             id: \"6\",\n//             title: \"je suis le quatrième article\",\n//             body: \"Voici le contenu de notre premier article, aha !\"\n//         }\n//     ],\n//     numberItemTestArray: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n// }\n// const rootReducer = (state = initState, action) => {\n//     console.log('heuu')\n//     if (action.type === 'INCREMENT') {\n//         let newArray = [...state.numberItemTestArray]\n//         newArray.push(11)\n//         console.log(state.numberItemTestArray.length)\n//         return {\n//             ...state,\n//             numberItemTestArray: newArray\n//         }\n//     }\n//     return state;\n// }\n// export default rootReducer;\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux'\n// class Accueil extends Component {\n//     state = {\n//         myText: ''\n//     }\n//     addpost = () => {\n//         const newObject = {\n//             id: \"0\",\n//             title: \"je suis le nouvelle article\",\n//             body: `${this.state.myText}, aha !`\n//         }\n//         this.props.addposts(newObject)\n//     }\n//     handleInput = (e) => {\n//         const text = e.target.value\n//         this.setState({ myText: text })\n//     } \n//     render() {\n//         const { posts } = this.props;\n//         const postData = posts.length ? (\n//             posts.map(post => {\n//                 return (\n//                     <div style={article} key={post.id}>\n//                         <h2>{post.title}</h2>\n//                         <p>{post.body}</p>\n//                     </div>\n//                 )\n//             })\n//         ) : (\n//             <p>Aucun article pour le moment !</p>\n//         )\n//         return (\n//             <div style={container}>\n//                 <h4>Page d'accueil</h4>\n//                 <input type=\"text\" onChange={this.handleInput} /><button onClick={this.addpost}>valide</button>\n//                 {postData}\n//             </div>\n//         )\n//     }\n// }\n// const mapStateToProps = state => {\n//     return {\n//         posts: state.posts\n//     }\n// }\n// const mapDispatchToProps = dispatch => {\n//     return ({\n//         addposts: (newObject) => {\n//             dispatch({ type: \"ADDPOST\", payload: newObject })\n//         }\n//     })\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(Accueil);","map":{"version":3,"sources":["/Users/thomasperrier/Desktop/groupomania_react/frontend/src/Reducers/rootReducer.js"],"names":["initState","user","id","username","password","age","mail","department","rootReducer","state","action","console","log","type","newUser"],"mappings":"AACA,MAAMA,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE;AACFC,IAAAA,EAAE,EAAE,CADF;AAEFC,IAAAA,QAAQ,EAAE,EAFR;AAGFC,IAAAA,QAAQ,EAAE,EAHR;AAIFC,IAAAA,GAAG,EAAE,CAJH;AAKFC,IAAAA,IAAI,EAAE,EALJ;AAMFC,IAAAA,UAAU,EAAE;AANV;AADQ,CAAlB;;AAWA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGT,SAAT,EAAoBU,MAApB,KAA+B;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AAEA,MAAIF,MAAM,CAACG,IAAP,KAAgB,WAApB,EAAiC;AAC7B,QAAIC,OAAO,GAAG,CAAC,GAAGL,KAAK,CAACR,IAAV,CAAd;AACA,WAAO,EACH,GAAGQ,KADA;AAEHR,MAAAA,IAAI,EAAEa;AAFH,KAAP;AAIH;;AACD,SAAOL,KAAP;AACH,CAXD;;AAaA,eAAeD,WAAf,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["\nconst initState = {\n    user: {\n        id: 0,\n        username: '',\n        password: '',\n        age: 0,\n        mail: '',\n        department: ''\n    }\n}\n\nconst rootReducer = (state = initState, action) => {\n    console.log('heuu')\n    \n    if (action.type === 'INCREMENT') {\n        let newUser = [...state.user]\n        return {\n            ...state,\n            user: newUser\n        }\n    }\n    return state;\n}\n\nexport default rootReducer;\n\n\n\n\n\n// const initState = {\n//     posts: [\n//         {\n//             id: \"1\",\n//             title: \"je suis le premier article\",\n//             body: \"Voici le contenu de notre premier article, aha !\"\n//         },\n//         {\n//             id: \"2\",\n//             title: \"je suis le deuxieme article\",\n//             body: \"Voici le contenu de notre premier article, aha !\"\n//         },\n//         {\n//             id: \"3\",\n//             title: \"je suis le troisième article\",\n//             body: \"Voici le contenu de notre premier article, aha !\"\n//         },\n//         {\n//             id: \"4\",\n//             title: \"je suis le quatrième article\",\n//             body: \"Voici le contenu de notre premier article, aha !\"\n//         },\n//         {\n//             id: \"5\",\n//             title: \"je suis le quatrième article\",\n//             body: \"Voici le contenu de notre premier article, aha !\"\n//         },\n//         {\n//             id: \"6\",\n//             title: \"je suis le quatrième article\",\n//             body: \"Voici le contenu de notre premier article, aha !\"\n//         }\n//     ],\n//     numberItemTestArray: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n// }\n\n// const rootReducer = (state = initState, action) => {\n//     console.log('heuu')\n//     if (action.type === 'INCREMENT') {\n//         let newArray = [...state.numberItemTestArray]\n//         newArray.push(11)\n//         console.log(state.numberItemTestArray.length)\n//         return {\n//             ...state,\n//             numberItemTestArray: newArray\n//         }\n//     }\n//     return state;\n// }\n\n// export default rootReducer;\n\n\n\n\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux'\n\n\n\n// class Accueil extends Component {\n\n//     state = {\n//         myText: ''\n//     }\n\n//     addpost = () => {\n\n//         const newObject = {\n//             id: \"0\",\n//             title: \"je suis le nouvelle article\",\n//             body: `${this.state.myText}, aha !`\n//         }\n\n//         this.props.addposts(newObject)\n//     }\n\n//     handleInput = (e) => {\n//         const text = e.target.value\n//         this.setState({ myText: text })\n//     } \n\n\n//     render() {\n        \n//         const { posts } = this.props;\n        \n//         const postData = posts.length ? (\n//             posts.map(post => {\n//                 return (\n//                     <div style={article} key={post.id}>\n//                         <h2>{post.title}</h2>\n//                         <p>{post.body}</p>\n//                     </div>\n//                 )\n//             })\n//         ) : (\n//             <p>Aucun article pour le moment !</p>\n//         )\n//         return (\n//             <div style={container}>\n//                 <h4>Page d'accueil</h4>\n//                 <input type=\"text\" onChange={this.handleInput} /><button onClick={this.addpost}>valide</button>\n//                 {postData}\n//             </div>\n//         )\n//     }\n// }\n\n// const mapStateToProps = state => {\n//     return {\n//         posts: state.posts\n//     }\n// }\n\n// const mapDispatchToProps = dispatch => {\n//     return ({\n//         addposts: (newObject) => {\n//             dispatch({ type: \"ADDPOST\", payload: newObject })\n//         }\n//     })\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Accueil);\n\n"]},"metadata":{},"sourceType":"module"}