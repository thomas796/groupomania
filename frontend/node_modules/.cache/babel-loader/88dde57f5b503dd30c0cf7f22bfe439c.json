{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostHome.js\";\nimport React, { Component } from 'react';\nimport './PostHome.css';\nimport Axios from 'axios';\nimport PostComment from './PostComment';\n\nclass PostHome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      description: '',\n      selectedFile: 'null',\n      postArray: [],\n      currentPostIndex: -1,\n      comment: [],\n      inputCommentValue: ''\n    };\n\n    this.addPost = () => {\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n      var formData = new FormData();\n      formData.append(\"image\", this.state.selectedFile);\n      formData.append(\"description\", this.state.description);\n      Axios.post(`${process.env.REACT_APP_API_URL}/addPost/${getToken[0]}`, formData, {\n        headers: {\n          \"Authorization\": `Bearer ${getToken[1]}`\n        }\n      }).then(() => {\n        this.updatePost();\n      });\n    };\n\n    this.fileSelectedHandler = e => {\n      this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n\n    this.handleDescription = e => {\n      const description = e.target.value;\n      this.setState({\n        description\n      });\n    };\n\n    this.addCommentPress = (e, postId) => {\n      if (e.key === 'Enter') {\n        let getTokenStringify = localStorage.getItem(\"token\");\n        let getToken = JSON.parse(getTokenStringify);\n        Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n          postId: postId + '',\n          comment: e.target.value + ''\n        }, {\n          headers: {\n            \"Authorization\": `Bearer ${getToken[1]}`\n          }\n        }).then(response => {\n          this.getComment();\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.updatePost();\n  }\n\n  updatePost() {\n    let getTokenStringify = localStorage.getItem(\"token\");\n    let getToken = JSON.parse(getTokenStringify);\n    Axios.get(`${process.env.REACT_APP_API_URL}/getPost`, {\n      headers: {\n        \"Authorization\": `Bearer ${getToken[1]}`\n      }\n    }).then(response => {\n      let postArray = response.data.reverse();\n      console.log('post Array');\n      console.log(postArray);\n      this.setState({\n        postArray\n      });\n    });\n  }\n\n  render() {\n    let post = [];\n    this.state.postArray.forEach((post, postIndex) => {\n      post.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"titlePost\",\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"imagePost\",\n            src: post.urlimage,\n            alt: `post ${postIndex}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.showComment(post.idposts),\n            className: \"showAddCommentBtn\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(PostComment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, 'post' + postIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postView\",\n      children: [post, /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"lastDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"homeBottomBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"inputPost\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"description\",\n            value: this.state.description,\n            placeholder: \"Description\",\n            onChange: this.handleDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.fileSelectedHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addPostBtn\",\n          onClick: this.addPost,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default PostHome;","map":{"version":3,"sources":["/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostHome.js"],"names":["React","Component","Axios","PostComment","PostHome","state","description","selectedFile","postArray","currentPostIndex","comment","inputCommentValue","addPost","getTokenStringify","localStorage","getItem","getToken","JSON","parse","formData","FormData","append","post","process","env","REACT_APP_API_URL","headers","then","updatePost","fileSelectedHandler","e","setState","target","files","handleDescription","value","addCommentPress","postId","key","response","getComment","componentDidMount","get","data","reverse","console","log","render","forEach","postIndex","push","urlimage","showComment","idposts"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './PostHome.css';\nimport Axios from 'axios'\nimport PostComment from './PostComment';\n\nclass PostHome extends Component {\n\n  state = {\n    description: '',\n    selectedFile: 'null',\n    postArray: [],\n    currentPostIndex: -1,\n    comment: [],\n    inputCommentValue: ''\n}\n\ncomponentDidMount () {\n   this.updatePost()\n}\n\nupdatePost () {\n\n  let getTokenStringify = localStorage.getItem(\"token\");\n  let getToken = JSON.parse(getTokenStringify);\n\n  Axios.get(`${process.env.REACT_APP_API_URL}/getPost`, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n\n      let postArray = response.data.reverse()\n      console.log('post Array')\n      console.log(postArray)\n      this.setState({ postArray })\n\n  })\n}\n\n\n\naddPost = () => {\n\n  let getTokenStringify = localStorage.getItem(\"token\");\n  let getToken = JSON.parse(getTokenStringify);\n\n  var formData = new FormData();\n  formData.append(\"image\", this.state.selectedFile);\n  formData.append(\"description\", this.state.description);\n\n  Axios.post(`${process.env.REACT_APP_API_URL}/addPost/${getToken[0]}`, formData, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then(() => {\n          this.updatePost()\n    })\n\n}\n\n\nfileSelectedHandler = (e) => {\n  this.setState({ selectedFile: e.target.files[0] })\n}\n\nhandleDescription = (e) => {\n  const description = e.target.value\n  this.setState({ description })\n}\n\n\n\n\naddCommentPress = (e, postId) => {\n\n    if (e.key === 'Enter') {\n\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n\n      Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n        postId: postId+'',\n        comment: e.target.value+''\n      }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n        \n        this.getComment()\n\n      })\n    } \n}\n\n render() {\n\n    let post = []\n        \n    this.state.postArray.forEach((post, postIndex) => {\n      \n      post.push(\n        <div key={'post' + postIndex}>\n        <div className=\"postDiv\">\n          <h1 className=\"titlePost\">{post.description}</h1>\n          <img className=\"imagePost\" src={post.urlimage} alt={`post ${postIndex}`} />\n          <button \n            onClick={() => this.showComment(post.idposts)} \n            className=\"showAddCommentBtn\">\n              ...\n          </button>\n        </div>\n          <PostComment\n          \n          >\n          </PostComment>\n        </div>)\n    });\n\n    return (\n          <div id=\"postView\">\n              {post}\n              <div id=\"lastDiv\"></div>\n          <div id=\"homeBottomBar\">\n            <div id=\"inputPost\">\n              <input type=\"text\" id=\"description\" value={this.state.description} placeholder=\"Description\" onChange={this.handleDescription} />\n              <input type=\"file\" onChange={this.fileSelectedHandler}/>\n            </div>\n              <button id=\"addPostBtn\" onClick={this.addPost}>+</button>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default PostHome;\n"]},"metadata":{},"sourceType":"module"}