{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostComment.js\";\nimport React, { Component } from 'react';\nimport './PostHome.css';\nimport Axios from 'axios';\n\nclass PostComment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      description: '',\n      selectedFile: 'null',\n      postArray: [],\n      currentPostIndex: -1,\n      comment: [],\n      inputCommentValue: ''\n    };\n\n    this.showComment = index => {\n      console.log(index);\n\n      if (this.state.currentPostIndex === -1) {\n        this.setState({\n          currentPostIndex: index\n        });\n        this.getComment();\n      } else {\n        this.setState({\n          currentPostIndex: -1\n        });\n      }\n\n      if (this.state.currentPostIndex === index) {} else {}\n    };\n\n    this.getComment = () => {\n      console.log('user data et post data ' + this.state.currentPostIndex);\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n      Axios.get(`${process.env.REACT_APP_API_URL}/getComments/${this.state.currentPostIndex}`, {\n        headers: {\n          \"Authorization\": `Bearer ${getToken[1]}`\n        }\n      }).then(response => {\n        console.log(response.data);\n      });\n    };\n\n    this.addCommentChange = e => {\n      this.setState({\n        inputCommentValue: e.target.value\n      });\n    };\n\n    this.addCommentPress = (e, postId) => {\n      if (e.key === 'Enter') {\n        let getTokenStringify = localStorage.getItem(\"token\");\n        let getToken = JSON.parse(getTokenStringify);\n        Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n          postId: postId + '',\n          comment: e.target.value + ''\n        }, {\n          headers: {\n            \"Authorization\": `Bearer ${getToken[1]}`\n          }\n        }).then(response => {\n          this.getComment();\n        });\n      }\n    };\n  }\n\n  render() {\n    let comment = [];\n\n    if (this.state.currentPostIndex === post.idposts) {\n      let lastComment = [];\n      this.state.comment.forEach((theComment, commentIndex) => {\n        if (this.state.currentPostIndex === theComment[1]) {\n          lastComment.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"theComment\",\n            children: theComment[2]\n          }, 'theComment' + commentIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this));\n        }\n      });\n      comment.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [lastComment, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.inputCommentValue,\n          className: \"addCommentInput\",\n          placeholder: \"ajouter un commentaire...\",\n          onChange: e => this.addCommentChange(e),\n          onKeyPress: e => this.addCommentPress(e, postIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, 'comment' + postIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default PostComment;","map":{"version":3,"sources":["/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostComment.js"],"names":["React","Component","Axios","PostComment","state","description","selectedFile","postArray","currentPostIndex","comment","inputCommentValue","showComment","index","console","log","setState","getComment","getTokenStringify","localStorage","getItem","getToken","JSON","parse","get","process","env","REACT_APP_API_URL","headers","then","response","data","addCommentChange","e","target","value","addCommentPress","postId","key","post","render","idposts","lastComment","forEach","theComment","commentIndex","push","postIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './PostHome.css';\nimport Axios from 'axios'\n\nclass PostComment extends Component {\n\n  state = {\n    description: '',\n    selectedFile: 'null',\n    postArray: [],\n    currentPostIndex: -1,\n    comment: [],\n    inputCommentValue: ''\n}\n\n// componentDidMount () {\n//    this.updatePost()\n// }\n\nshowComment = (index) => {\n\n  console.log(index)\n  if (this.state.currentPostIndex === -1) {\n    this.setState({ currentPostIndex: index })\n    this.getComment()\n  } else {\n    this.setState({ currentPostIndex: -1 })\n  }\n  \n  if (this.state.currentPostIndex === index) {\n  } else {\n  \n  }\n\n}\n\ngetComment = () => {\n\n  console.log('user data et post data '+ this.state.currentPostIndex)\n\n  let getTokenStringify = localStorage.getItem(\"token\");\n  let getToken = JSON.parse(getTokenStringify);\n\n  Axios.get(`${process.env.REACT_APP_API_URL}/getComments/${this.state.currentPostIndex}`, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n      console.log(response.data)\n  })\n}\n\naddCommentChange = (e) => {\n    this.setState({ inputCommentValue: e.target.value })\n}\n\naddCommentPress = (e, postId) => {\n    if (e.key === 'Enter') {\n\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n\n      Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n        postId: postId+'',\n        comment: e.target.value+''\n      }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n        \n        this.getComment()\n\n      })\n    } \n}\n\n render() {\n\n      \n      let comment = []\n      if (this.state.currentPostIndex === post.idposts) {\n\n        let lastComment = []\n        this.state.comment.forEach((theComment, commentIndex) => {\n          if (this.state.currentPostIndex === theComment[1]) {\n            lastComment.push(\n              <p \n                key={'theComment'+commentIndex} \n                className='theComment'\n              >\n                {theComment[2]}\n              </p>\n            )\n          }\n        })\n              \n        comment.push(\n          <div key={'comment'+postIndex}>\n              {lastComment}\n              <input\n                type=\"text\"\n                value={this.state.inputCommentValue}\n                className=\"addCommentInput\"\n                placeholder=\"ajouter un commentaire...\"\n                onChange={(e) => this.addCommentChange(e)}\n                onKeyPress={(e) => this.addCommentPress(e, postIndex)}\n              />\n          </div>)\n      }\n\n    \n  \n\n    return (\n        <div>\n            {comment}\n        </div>\n    )\n  }\n}\n\nexport default PostComment;"]},"metadata":{},"sourceType":"module"}