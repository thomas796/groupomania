{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostComment.js\";\nimport React, { Component } from 'react';\nimport './PostComment.css';\nimport Anonyme from '../../img/anonyme.png';\n\nclass PostComment extends Component {\n  addDefaultSrc(ev) {\n    ev.target.src = Anonyme;\n  }\n\n  render() {\n    const props = this.props;\n    let comments = [];\n    props.comments.forEach((comment, commentIndex) => {\n      comments.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"imageUserComment\",\n          onError: this.addDefaultSrc,\n          src: comment.profilimage,\n          alt: 'userProfil'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"theComment\",\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"theComment\",\n          children: comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, 'theComment' + commentIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [comments, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: props.inputCommentValue,\n        className: \"addCommentInput\",\n        placeholder: \"ajouter un commentaire...\",\n        onChange: e => props.addCommentChange(e),\n        onKeyPress: e => props.addCommentPress(e, props.idposts)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n} //   state = {\n//     description: '',\n//     selectedFile: 'null',\n//     postArray: [],\n//     currentPostIndex: -1,\n//     comment: [],\n//     inputCommentValue: ''\n// }\n// // componentDidMount () {\n// //    this.updatePost()\n// // }\n// showComment = (index) => {\n//   console.log(index)\n//   if (this.state.currentPostIndex === -1) {\n//     this.setState({ currentPostIndex: index })\n//     this.getComment()\n//   } else {\n//     this.setState({ currentPostIndex: -1 })\n//   }\n//   if (this.state.currentPostIndex === index) {\n//   } else {\n//   }\n// }\n// getComment = () => {\n//   console.log('user data et post data '+ this.state.currentPostIndex)\n//   let getTokenStringify = localStorage.getItem(\"token\");\n//   let getToken = JSON.parse(getTokenStringify);\n//   Axios.get(`${process.env.REACT_APP_API_URL}/getComments/${this.state.currentPostIndex}`, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n//       console.log(response.data)\n//   })\n// }\n// addCommentChange = (e) => {\n//     this.setState({ inputCommentValue: e.target.value })\n// }\n// addCommentPress = (e, postId) => {\n//     if (e.key === 'Enter') {\n//       let getTokenStringify = localStorage.getItem(\"token\");\n//       let getToken = JSON.parse(getTokenStringify);\n//       Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n//         postId: postId+'',\n//         comment: e.target.value+''\n//       }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n//         this.getComment()\n//       })\n//     } \n// }\n//  render() {\n//       let comment = []\n//       if (this.state.currentPostIndex === post.idposts) {\n//         let lastComment = []\n//         this.state.comment.forEach((theComment, commentIndex) => {\n//           if (this.state.currentPostIndex === theComment[1]) {\n//             lastComment.push(\n//               <p \n//                 key={'theComment'+commentIndex} \n//                 className='theComment'\n//               >\n//                 {theComment[2]}\n//               </p>\n//             )\n//           }\n//         })\n//         comment.push(\n//           <div key={'comment'+postIndex}>\n//               {lastComment}\n//               <input\n//                 type=\"text\"\n//                 value={this.state.inputCommentValue}\n//                 className=\"addCommentInput\"\n//                 placeholder=\"ajouter un commentaire...\"\n//                 onChange={(e) => this.addCommentChange(e)}\n//                 onKeyPress={(e) => this.addCommentPress(e, postIndex)}\n//               />\n//           </div>)\n//       }\n//     return (\n//         <div>\n//             {comment}\n//         </div>\n//     )\n//   }\n// }\n\n\nexport default PostComment;","map":{"version":3,"sources":["/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostComment.js"],"names":["React","Component","Anonyme","PostComment","addDefaultSrc","ev","target","src","render","props","comments","forEach","comment","commentIndex","push","profilimage","name","inputCommentValue","e","addCommentChange","addCommentPress","idposts"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAGhCG,EAAAA,aAAa,CAACC,EAAD,EAAI;AACbA,IAAAA,EAAE,CAACC,MAAH,CAAUC,GAAV,GAAgBL,OAAhB;AACD;;AAEHM,EAAAA,MAAM,GAAG;AAEL,UAAMC,KAAK,GAAG,KAAKA,KAAnB;AAEA,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuB,CAACC,OAAD,EAAUC,YAAV,KAA2B;AAE9CH,MAAAA,QAAQ,CAACI,IAAT,eACI;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAkC,UAAA,OAAO,EAAE,KAAKV,aAAhD;AAA+D,UAAA,GAAG,EAAEQ,OAAO,CAACG,WAA5E;AAAyF,UAAA,GAAG,EAAE;AAA9F;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,oBACKH,OAAO,CAACI;AADb;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,oBACKJ,OAAO,CAACA;AADb;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA,SAAU,eAAaC,YAAvB;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH,KAfD;AAiBA,wBACI;AAAA,iBACKH,QADL,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAED,KAAK,CAACQ,iBAFjB;AAGI,QAAA,SAAS,EAAC,iBAHd;AAII,QAAA,WAAW,EAAC,2BAJhB;AAKI,QAAA,QAAQ,EAAGC,CAAD,IAAOT,KAAK,CAACU,gBAAN,CAAuBD,CAAvB,CALrB;AAMI,QAAA,UAAU,EAAGA,CAAD,IAAOT,KAAK,CAACW,eAAN,CAAsBF,CAAtB,EAAyBT,KAAK,CAACY,OAA/B;AANvB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AA1C+B,C,CA+CpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAelB,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport './PostComment.css';\nimport Anonyme from '../../img/anonyme.png'\n\nclass PostComment extends Component {\n\n\n    addDefaultSrc(ev){\n        ev.target.src = Anonyme\n      }\n\n    render() {\n\n        const props = this.props\n\n        let comments = []\n        props.comments.forEach((comment, commentIndex) => {\n\n            comments.push(\n                <div key={'theComment'+commentIndex}>\n                    <img className='imageUserComment' onError={this.addDefaultSrc} src={comment.profilimage} alt={'userProfil'}/>\n                    <p className='theComment'>\n                        {comment.name}\n                    </p>\n                    <p className='theComment'>\n                        {comment.comment}\n                    </p>\n                </div>\n                    \n            )\n\n        })\n\n        return (\n            <div>\n                {comments}\n                <input\n                    type=\"text\"\n                    value={props.inputCommentValue}\n                    className=\"addCommentInput\"\n                    placeholder=\"ajouter un commentaire...\"\n                    onChange={(e) => props.addCommentChange(e)}\n                    onKeyPress={(e) => props.addCommentPress(e, props.idposts)}\n                />\n            </div>\n        )\n    }\n\n}\n\n\n//   state = {\n//     description: '',\n//     selectedFile: 'null',\n//     postArray: [],\n//     currentPostIndex: -1,\n//     comment: [],\n//     inputCommentValue: ''\n// }\n\n// // componentDidMount () {\n// //    this.updatePost()\n// // }\n\n// showComment = (index) => {\n\n//   console.log(index)\n//   if (this.state.currentPostIndex === -1) {\n//     this.setState({ currentPostIndex: index })\n//     this.getComment()\n//   } else {\n//     this.setState({ currentPostIndex: -1 })\n//   }\n  \n//   if (this.state.currentPostIndex === index) {\n//   } else {\n  \n//   }\n\n// }\n\n// getComment = () => {\n\n//   console.log('user data et post data '+ this.state.currentPostIndex)\n\n//   let getTokenStringify = localStorage.getItem(\"token\");\n//   let getToken = JSON.parse(getTokenStringify);\n\n//   Axios.get(`${process.env.REACT_APP_API_URL}/getComments/${this.state.currentPostIndex}`, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n//       console.log(response.data)\n//   })\n// }\n\n// addCommentChange = (e) => {\n//     this.setState({ inputCommentValue: e.target.value })\n// }\n\n// addCommentPress = (e, postId) => {\n//     if (e.key === 'Enter') {\n\n//       let getTokenStringify = localStorage.getItem(\"token\");\n//       let getToken = JSON.parse(getTokenStringify);\n\n//       Axios.post(`${process.env.REACT_APP_API_URL}/addComment/${getToken[0]}`, {\n//         postId: postId+'',\n//         comment: e.target.value+''\n//       }, { headers: {\"Authorization\" : `Bearer ${getToken[1]}`} }).then((response) => {\n        \n//         this.getComment()\n\n//       })\n//     } \n// }\n\n//  render() {\n\n      \n//       let comment = []\n//       if (this.state.currentPostIndex === post.idposts) {\n\n//         let lastComment = []\n//         this.state.comment.forEach((theComment, commentIndex) => {\n//           if (this.state.currentPostIndex === theComment[1]) {\n//             lastComment.push(\n//               <p \n//                 key={'theComment'+commentIndex} \n//                 className='theComment'\n//               >\n//                 {theComment[2]}\n//               </p>\n//             )\n//           }\n//         })\n              \n//         comment.push(\n//           <div key={'comment'+postIndex}>\n//               {lastComment}\n//               <input\n//                 type=\"text\"\n//                 value={this.state.inputCommentValue}\n//                 className=\"addCommentInput\"\n//                 placeholder=\"ajouter un commentaire...\"\n//                 onChange={(e) => this.addCommentChange(e)}\n//                 onKeyPress={(e) => this.addCommentPress(e, postIndex)}\n//               />\n//           </div>)\n//       }\n\n    \n  \n\n//     return (\n//         <div>\n//             {comment}\n//         </div>\n//     )\n//   }\n// }\n\nexport default PostComment;"]},"metadata":{},"sourceType":"module"}