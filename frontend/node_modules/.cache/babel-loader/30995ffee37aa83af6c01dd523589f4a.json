{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostHome.js\";\nimport React, { Component } from 'react';\nimport './PostHome.css';\nimport Axios from 'axios';\nimport PostComment from './PostComment';\nimport Anonyme from '../../img/anonyme.png';\nimport DefaultPost from '../../img/defaultPost.png';\nimport grayThumb from '../../img/thumb_gray.png';\nimport blueThumb from '../../img/thumb_blue.png';\nimport redThumb from '../../img/thumb_red.png';\nimport Trash from '../../img/trash.png';\n\nclass PostHome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      description: '',\n      selectedFile: 'null',\n      postArray: [],\n      showCommentIdPost: -1,\n      comments: [],\n      inputCommentValue: '',\n      likes: []\n    };\n\n    this.addPost = () => {\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n      var formData = new FormData();\n\n      if (this.state.selectedFile !== null) {\n        formData.append(\"image\", this.state.selectedFile);\n      }\n\n      formData.append(\"description\", this.state.description);\n      Axios.post(`${process.env.REACT_APP_API_URL}/addPost`, formData, {\n        headers: {\n          \"Authorization\": `Bearer ${getToken[0]}`\n        }\n      }).then(() => {\n        this.updatePost();\n        this.setState({\n          description: '',\n          selectedFile: null\n        });\n      });\n    };\n\n    this.fileSelectedHandler = e => {\n      this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n\n    this.handleDescription = e => {\n      const description = e.target.value;\n      this.setState({\n        description\n      });\n    };\n\n    this.handleShowComment = postId => {\n      if (this.state.showCommentIdPost === -1) {\n        this.setState({\n          showCommentIdPost: postId\n        });\n        this.getComment(postId);\n      } else {\n        if (this.state.showCommentIdPost === postId) {\n          this.setState({\n            showCommentIdPost: -1\n          });\n        } else {\n          this.setState({\n            showCommentIdPost: postId\n          });\n          this.getComment(postId);\n        }\n      }\n    };\n\n    this.getComment = postId => {\n      this.setState({\n        comments: []\n      });\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n      Axios.get(`${process.env.REACT_APP_API_URL}/getComments/${postId}`, {\n        headers: {\n          \"Authorization\": `Bearer ${getToken[0]}`\n        }\n      }).then(response => {\n        this.setState({\n          comments: response.data\n        });\n      });\n    };\n\n    this.addCommentChange = e => {\n      this.setState({\n        inputCommentValue: e.target.value\n      });\n    };\n\n    this.addCommentPress = (e, idposts, userProfil) => {\n      if (e.key === 'Enter') {\n        let getTokenStringify = localStorage.getItem(\"token\");\n        let getToken = JSON.parse(getTokenStringify);\n        Axios.post(`${process.env.REACT_APP_API_URL}/addComment`, {\n          postId: idposts + '',\n          comment: e.target.value + ''\n        }, {\n          headers: {\n            \"Authorization\": `Bearer ${getToken[0]}`\n          }\n        }).then(() => {\n          let comments = this.state.comments;\n          comments.push({\n            comment: e.target.value + '',\n            idComment: 0,\n            postId: idposts,\n            userId: getToken[0],\n            username: userProfil.username,\n            profilimage: userProfil.image_url\n          });\n          this.setState({\n            comments: comments\n          });\n          this.setState({\n            inputCommentValue: ''\n          });\n        });\n      }\n    };\n\n    this.deletePost = post => {\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n      Axios.delete(`${process.env.REACT_APP_API_URL}/deletePost/${post}`, {\n        headers: {\n          \"Authorization\": `Bearer ${getToken[0]}`\n        }\n      }).then(response => {\n        this.updatePost();\n      });\n    };\n\n    this.thumb = (thumb, idposts) => {\n      console.log(thumb + ' ' + idposts);\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n      Axios.put(`${process.env.REACT_APP_API_URL}/likes`, {\n        thumb: thumb,\n        post: idposts\n      }, {\n        headers: {\n          \"Authorization\": `Bearer ${getToken[0]}`\n        }\n      }).then(response => {\n        this.updateLikes();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updatePost();\n  }\n\n  updatePost() {\n    let getTokenStringify = localStorage.getItem(\"token\");\n    let getToken = JSON.parse(getTokenStringify);\n    Axios.get(`${process.env.REACT_APP_API_URL}/getPost`, {\n      headers: {\n        \"Authorization\": `Bearer ${getToken[0]}`\n      }\n    }).then(response => {\n      let postArray = response.data.reverse();\n      this.setState({\n        postArray\n      });\n    });\n    this.updateLikes();\n  }\n\n  updateLikes() {\n    let getTokenStringify = localStorage.getItem(\"token\");\n    let getToken = JSON.parse(getTokenStringify);\n    Axios.get(`${process.env.REACT_APP_API_URL}/getLikes`, {\n      headers: {\n        \"Authorization\": `Bearer ${getToken[0]}`\n      }\n    }).then(response => {\n      console.log(response.data);\n      this.setState({\n        likes: response.data\n      });\n    });\n  }\n\n  addDefaultSrc(ev) {\n    ev.target.src = Anonyme;\n  }\n\n  defaultPostImageSrc(ev) {\n    ev.target.src = DefaultPost;\n  }\n\n  render() {\n    const user = this.props.userProfil;\n    let addPost = [];\n    this.state.postArray.forEach((post, postIndex) => {\n      const comments = [];\n\n      if (post.idposts === this.state.showCommentIdPost) {\n        comments.push( /*#__PURE__*/_jsxDEV(PostComment, {\n          comments: this.state.comments,\n          idposts: post.idposts,\n          addCommentChange: this.addCommentChange,\n          addCommentPress: this.addCommentPress,\n          inputCommentValue: this.state.inputCommentValue,\n          userProfil: this.props.userProfil\n        }, 'comment' + postIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this));\n      }\n\n      let heightDiv;\n\n      if (post.urlimage.length < 1) {\n        heightDiv = {\n          height: '120px'\n        };\n      }\n\n      let administratorBtn = [];\n\n      if (user.isadministrator) {\n        administratorBtn.push( /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => this.deletePost(post.idposts),\n          className: \"trash\",\n          src: Trash,\n          alt: \"trash\"\n        }, 'trash' + post.idposts, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 31\n        }, this));\n      }\n\n      let thumbUp = grayThumb;\n      let thumbDown = grayThumb;\n      this.state.likes.forEach();\n      addPost.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postDiv\",\n          style: heightDiv,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userPostContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"imageUserPost\",\n              onError: this.addDefaultSrc,\n              src: post.profilimage,\n              alt: 'userProfil'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"usernamePost\",\n              children: [\"publication de \", post.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), administratorBtn]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"descriptionPost\",\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            onError: this.defaultPostImageSrc,\n            className: \"imagePost\",\n            src: post.urlimage,\n            alt: `post ${post.idposts}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"thumbContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => this.thumb('up', post.idposts),\n              className: \"thumb_up\",\n              src: thumbUp,\n              alt: \"thumb_up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => this.thumb('down', post.idposts),\n              className: \"thumb_down\",\n              src: thumbDown,\n              alt: \"thumb_down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleShowComment(post.idposts),\n            className: \"showAddCommentBtn\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), comments]\n      }, 'post' + post.idposts, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postView\",\n      children: [addPost, /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"lastDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"homeBottomBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"inputPost\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"description\",\n            value: this.state.description,\n            placeholder: \"Description\",\n            onChange: this.handleDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.fileSelectedHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addPostBtn\",\n          onClick: this.addPost,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PostHome;","map":{"version":3,"sources":["/Users/thomasperrier/Desktop/groupomania/frontend/src/components/PostHome/PostHome.js"],"names":["React","Component","Axios","PostComment","Anonyme","DefaultPost","grayThumb","blueThumb","redThumb","Trash","PostHome","state","description","selectedFile","postArray","showCommentIdPost","comments","inputCommentValue","likes","addPost","getTokenStringify","localStorage","getItem","getToken","JSON","parse","formData","FormData","append","post","process","env","REACT_APP_API_URL","headers","then","updatePost","setState","fileSelectedHandler","e","target","files","handleDescription","value","handleShowComment","postId","getComment","get","response","data","addCommentChange","addCommentPress","idposts","userProfil","key","comment","push","idComment","userId","username","profilimage","image_url","deletePost","delete","thumb","console","log","put","updateLikes","componentDidMount","reverse","addDefaultSrc","ev","src","defaultPostImageSrc","render","user","props","forEach","postIndex","heightDiv","urlimage","length","height","administratorBtn","isadministrator","thumbUp","thumbDown"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAIA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE/BU,KAF+B,GAEvB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,YAAY,EAAE,MAFR;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,iBAAiB,EAAE,CAAC,CAJd;AAKNC,MAAAA,QAAQ,EAAE,EALJ;AAMNC,MAAAA,iBAAiB,EAAE,EANb;AAONC,MAAAA,KAAK,EAAE;AAPD,KAFuB;;AAAA,SA8CjCC,OA9CiC,GA8CvB,MAAM;AAEd,UAAIC,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,UAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,iBAAX,CAAf;AAEA,UAAIM,QAAQ,GAAG,IAAIC,QAAJ,EAAf;;AACA,UAAI,KAAKhB,KAAL,CAAWE,YAAX,KAA4B,IAAhC,EAAsC;AACpCa,QAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB,KAAKjB,KAAL,CAAWE,YAApC;AACD;;AACCa,MAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+B,KAAKjB,KAAL,CAAWC,WAA1C;AAEFV,MAAAA,KAAK,CAAC2B,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,UAA5C,EAAuDN,QAAvD,EAAiE;AAAEO,QAAAA,OAAO,EAAE;AAAC,2BAAmB,UAASV,QAAQ,CAAC,CAAD,CAAI;AAAzC;AAAX,OAAjE,EAA2HW,IAA3H,CAAgI,MAAM;AAC9H,aAAKC,UAAL;AACA,aAAKC,QAAL,CAAc;AACZxB,UAAAA,WAAW,EAAE,EADD;AAEZC,UAAAA,YAAY,EAAE;AAFF,SAAd;AAIL,OANH;AAQD,KAjEgC;;AAAA,SAoEjCwB,mBApEiC,GAoEVC,CAAD,IAAO;AAC3B,WAAKF,QAAL,CAAc;AAAEvB,QAAAA,YAAY,EAAEyB,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf;AAAhB,OAAd;AACD,KAtEgC;;AAAA,SAwEjCC,iBAxEiC,GAwEZH,CAAD,IAAO;AACzB,YAAM1B,WAAW,GAAG0B,CAAC,CAACC,MAAF,CAASG,KAA7B;AACA,WAAKN,QAAL,CAAc;AAAExB,QAAAA;AAAF,OAAd;AACD,KA3EgC;;AAAA,SA6EjC+B,iBA7EiC,GA6EZC,MAAD,IAAY;AAE5B,UAAI,KAAKjC,KAAL,CAAWI,iBAAX,KAAiC,CAAC,CAAtC,EAAyC;AACvC,aAAKqB,QAAL,CAAc;AAAErB,UAAAA,iBAAiB,EAAE6B;AAArB,SAAd;AACA,aAAKC,UAAL,CAAgBD,MAAhB;AACD,OAHD,MAGO;AACL,YAAI,KAAKjC,KAAL,CAAWI,iBAAX,KAAiC6B,MAArC,EAA6C;AAC3C,eAAKR,QAAL,CAAc;AAAErB,YAAAA,iBAAiB,EAAE,CAAC;AAAtB,WAAd;AACD,SAFD,MAEO;AACL,eAAKqB,QAAL,CAAc;AAAErB,YAAAA,iBAAiB,EAAE6B;AAArB,WAAd;AACA,eAAKC,UAAL,CAAgBD,MAAhB;AACD;AACF;AACJ,KA1FgC;;AAAA,SA4FjCC,UA5FiC,GA4FnBD,MAAD,IAAY;AAErB,WAAKR,QAAL,CAAc;AAAEpB,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAEA,UAAII,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,UAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,iBAAX,CAAf;AAEAlB,MAAAA,KAAK,CAAC4C,GAAN,CAAW,GAAEhB,OAAO,CAACC,GAAR,CAAYC,iBAAkB,gBAAeY,MAAO,EAAjE,EAAoE;AAAEX,QAAAA,OAAO,EAAE;AAAC,2BAAmB,UAASV,QAAQ,CAAC,CAAD,CAAI;AAAzC;AAAX,OAApE,EAA8HW,IAA9H,CAAoIa,QAAD,IAAc;AAC7I,aAAKX,QAAL,CAAc;AAAEpB,UAAAA,QAAQ,EAAE+B,QAAQ,CAACC;AAArB,SAAd;AACH,OAFD;AAIH,KAvGgC;;AAAA,SAyGjCC,gBAzGiC,GAyGbX,CAAD,IAAO;AACxB,WAAKF,QAAL,CAAc;AAAEnB,QAAAA,iBAAiB,EAAEqB,CAAC,CAACC,MAAF,CAASG;AAA9B,OAAd;AACD,KA3GgC;;AAAA,SA6GjCQ,eA7GiC,GA6Gf,CAACZ,CAAD,EAAIa,OAAJ,EAAaC,UAAb,KAA4B;AAE5C,UAAId,CAAC,CAACe,GAAF,KAAU,OAAd,EAAuB;AAEnB,YAAIjC,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,YAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,iBAAX,CAAf;AAEAlB,QAAAA,KAAK,CAAC2B,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,aAA5C,EAA0D;AACtDY,UAAAA,MAAM,EAAEO,OAAO,GAAC,EADsC;AAEtDG,UAAAA,OAAO,EAAEhB,CAAC,CAACC,MAAF,CAASG,KAAT,GAAe;AAF8B,SAA1D,EAGG;AAAET,UAAAA,OAAO,EAAE;AAAC,6BAAmB,UAASV,QAAQ,CAAC,CAAD,CAAI;AAAzC;AAAX,SAHH,EAG6DW,IAH7D,CAGkE,MAAM;AAEpE,cAAIlB,QAAQ,GAAG,KAAKL,KAAL,CAAWK,QAA1B;AACAA,UAAAA,QAAQ,CAACuC,IAAT,CAAc;AACZD,YAAAA,OAAO,EAAEhB,CAAC,CAACC,MAAF,CAASG,KAAT,GAAe,EADZ;AAEZc,YAAAA,SAAS,EAAE,CAFC;AAGZZ,YAAAA,MAAM,EAAEO,OAHI;AAIZM,YAAAA,MAAM,EAAElC,QAAQ,CAAC,CAAD,CAJJ;AAKZmC,YAAAA,QAAQ,EAAEN,UAAU,CAACM,QALT;AAMZC,YAAAA,WAAW,EAAEP,UAAU,CAACQ;AANZ,WAAd;AAQA,eAAKxB,QAAL,CAAc;AAAEpB,YAAAA,QAAQ,EAAEA;AAAZ,WAAd;AACA,eAAKoB,QAAL,CAAc;AAAEnB,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AACH,SAhBD;AAiBH;AACF,KAtIgC;;AAAA,SAgJjC4C,UAhJiC,GAgJnBhC,IAAD,IAAU;AACrB,UAAIT,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,UAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,iBAAX,CAAf;AAEAlB,MAAAA,KAAK,CAAC4D,MAAN,CAAc,GAAEhC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,eAAcH,IAAK,EAAjE,EACA;AAAEI,QAAAA,OAAO,EAAE;AAAC,2BAAmB,UAASV,QAAQ,CAAC,CAAD,CAAI;AAAzC;AAAX,OADA,EACyDW,IADzD,CAC+Da,QAAD,IAAc;AACxE,aAAKZ,UAAL;AACH,OAHD;AAID,KAxJgC;;AAAA,SA0JjC4B,KA1JiC,GA0JzB,CAACA,KAAD,EAAQZ,OAAR,KAAoB;AAC1Ba,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,GAAG,GAAR,GAAcZ,OAA1B;AAEA,UAAI/B,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,UAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,iBAAX,CAAf;AAEAlB,MAAAA,KAAK,CAACgE,GAAN,CAAW,GAAEpC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,QAA3C,EAAoD;AAClD+B,QAAAA,KAAK,EAAEA,KAD2C;AAElDlC,QAAAA,IAAI,EAAEsB;AAF4C,OAApD,EAGG;AAAElB,QAAAA,OAAO,EAAE;AAAC,2BAAmB,UAASV,QAAQ,CAAC,CAAD,CAAI;AAAzC;AAAX,OAHH,EAG4DW,IAH5D,CAGkEa,QAAD,IAAc;AAC3E,aAAKoB,WAAL;AACH,OALD;AAOD,KAvKgC;AAAA;;AAYjCC,EAAAA,iBAAiB,GAAI;AAClB,SAAKjC,UAAL;AACF;;AAEDA,EAAAA,UAAU,GAAI;AAEZ,QAAIf,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,iBAAX,CAAf;AAEAlB,IAAAA,KAAK,CAAC4C,GAAN,CAAW,GAAEhB,OAAO,CAACC,GAAR,CAAYC,iBAAkB,UAA3C,EAAsD;AAAEC,MAAAA,OAAO,EAAE;AAAC,yBAAmB,UAASV,QAAQ,CAAC,CAAD,CAAI;AAAzC;AAAX,KAAtD,EAAgHW,IAAhH,CAAsHa,QAAD,IAAc;AAE/H,UAAIjC,SAAS,GAAGiC,QAAQ,CAACC,IAAT,CAAcqB,OAAd,EAAhB;AACA,WAAKjC,QAAL,CAAc;AAAEtB,QAAAA;AAAF,OAAd;AAEH,KALD;AAOA,SAAKqD,WAAL;AAED;;AAEDA,EAAAA,WAAW,GAAI;AACb,QAAI/C,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,iBAAX,CAAf;AAEAlB,IAAAA,KAAK,CAAC4C,GAAN,CAAW,GAAEhB,OAAO,CAACC,GAAR,CAAYC,iBAAkB,WAA3C,EAAuD;AAAEC,MAAAA,OAAO,EAAE;AAAC,yBAAmB,UAASV,QAAQ,CAAC,CAAD,CAAI;AAAzC;AAAX,KAAvD,EAAiHW,IAAjH,CAAuHa,QAAD,IAAc;AAElIiB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAQ,CAACC,IAArB;AACA,WAAKZ,QAAL,CAAc;AAAElB,QAAAA,KAAK,EAAE6B,QAAQ,CAACC;AAAlB,OAAd;AAGD,KAND;AAOD;;AA6FDsB,EAAAA,aAAa,CAACC,EAAD,EAAI;AACfA,IAAAA,EAAE,CAAChC,MAAH,CAAUiC,GAAV,GAAgBpE,OAAhB;AACD;;AAEDqE,EAAAA,mBAAmB,CAACF,EAAD,EAAI;AACrBA,IAAAA,EAAE,CAAChC,MAAH,CAAUiC,GAAV,GAAgBnE,WAAhB;AACD;;AA2BAqE,EAAAA,MAAM,GAAG;AAEN,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWxB,UAAxB;AAEA,QAAIjC,OAAO,GAAG,EAAd;AAEA,SAAKR,KAAL,CAAWG,SAAX,CAAqB+D,OAArB,CAA6B,CAAChD,IAAD,EAAOiD,SAAP,KAAqB;AAEhD,YAAM9D,QAAQ,GAAG,EAAjB;;AACA,UAAGa,IAAI,CAACsB,OAAL,KAAiB,KAAKxC,KAAL,CAAWI,iBAA/B,EAAkD;AAChDC,QAAAA,QAAQ,CAACuC,IAAT,eACE,QAAC,WAAD;AAEE,UAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWK,QAFvB;AAGE,UAAA,OAAO,EAAEa,IAAI,CAACsB,OAHhB;AAIE,UAAA,gBAAgB,EAAE,KAAKF,gBAJzB;AAKE,UAAA,eAAe,EAAE,KAAKC,eALxB;AAME,UAAA,iBAAiB,EAAE,KAAKvC,KAAL,CAAWM,iBANhC;AAOE,UAAA,UAAU,EAAE,KAAK2D,KAAL,CAAWxB;AAPzB,WACO,YAAY0B,SADnB;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD;;AAED,UAAIC,SAAJ;;AACA,UAAIlD,IAAI,CAACmD,QAAL,CAAcC,MAAd,GAAuB,CAA3B,EAA8B;AAC5BF,QAAAA,SAAS,GAAG;AACVG,UAAAA,MAAM,EAAE;AADE,SAAZ;AAGD;;AAED,UAAIC,gBAAgB,GAAG,EAAvB;;AACA,UAAIR,IAAI,CAACS,eAAT,EAA0B;AACxBD,QAAAA,gBAAgB,CAAC5B,IAAjB,eAAsB;AAAgC,UAAA,OAAO,EAAE,MAAM,KAAKM,UAAL,CAAgBhC,IAAI,CAACsB,OAArB,CAA/C;AAA8E,UAAA,SAAS,EAAC,OAAxF;AAAgG,UAAA,GAAG,EAAE1C,KAArG;AAA4G,UAAA,GAAG,EAAC;AAAhH,WAAU,UAAQoB,IAAI,CAACsB,OAAvB;AAAA;AAAA;AAAA;AAAA,gBAAtB;AACD;;AAED,UAAIkC,OAAO,GAAG/E,SAAd;AACA,UAAIgF,SAAS,GAAGhF,SAAhB;AACA,WAAKK,KAAL,CAAWO,KAAX,CAAiB2D,OAAjB;AAGA1D,MAAAA,OAAO,CAACoC,IAAR,eACE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAyB,UAAA,KAAK,EAAEwB,SAAhC;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,eAAf;AAA+B,cAAA,OAAO,EAAE,KAAKT,aAA7C;AAA4D,cAAA,GAAG,EAAEzC,IAAI,CAAC8B,WAAtE;AAAmF,cAAA,GAAG,EAAE;AAAxF;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAC,cAAd;AAAA,4CACoB9B,IAAI,CAAC6B,QADzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAKKyB,gBALL;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQE;AAAG,YAAA,SAAS,EAAC,iBAAb;AAAA,sBAAgCtD,IAAI,CAACjB;AAArC;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AAAK,YAAA,OAAO,EAAE,KAAK6D,mBAAnB;AAAwC,YAAA,SAAS,EAAC,WAAlD;AAA8D,YAAA,GAAG,EAAE5C,IAAI,CAACmD,QAAxE;AAAkF,YAAA,GAAG,EAAG,QAAOnD,IAAI,CAACsB,OAAQ;AAA5G;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAK,YAAA,EAAE,EAAC,gBAAR;AAAA,oCACI;AAAK,cAAA,OAAO,EAAE,MAAM,KAAKY,KAAL,CAAW,IAAX,EAAiBlC,IAAI,CAACsB,OAAtB,CAApB;AAAoD,cAAA,SAAS,EAAC,UAA9D;AAAyE,cAAA,GAAG,EAAEkC,OAA9E;AAAuF,cAAA,GAAG,EAAC;AAA3F;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,OAAO,EAAE,MAAM,KAAKtB,KAAL,CAAW,MAAX,EAAmBlC,IAAI,CAACsB,OAAxB,CAApB;AAAsD,cAAA,SAAS,EAAC,YAAhE;AAA6E,cAAA,GAAG,EAAEmC,SAAlF;AAA6F,cAAA,GAAG,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,eAcE;AACE,YAAA,OAAO,EAAE,MAAM,KAAK3C,iBAAL,CAAuBd,IAAI,CAACsB,OAA5B,CADjB;AAEE,YAAA,SAAS,EAAC,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAqBGnC,QArBH;AAAA,SAAU,SAASa,IAAI,CAACsB,OAAxB;AAAA;AAAA;AAAA;AAAA,cADF;AAyBD,KA5DD;AA8DA,wBAEE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA,iBACGhC,OADH,eAEE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA,gCACE;AAAK,UAAA,EAAE,EAAC,WAAR;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,aAFL;AAGE,YAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,WAHpB;AAIE,YAAA,WAAW,EAAC,aAJd;AAKE,YAAA,QAAQ,EAAE,KAAK6B;AALjB;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAE,KAAKJ;AAAlC;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWI;AAAQ,UAAA,EAAE,EAAC,YAAX;AAAwB,UAAA,OAAO,EAAE,KAAKlB,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAoBD;;AAjQ8B;;AAoQjC,eAAeT,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport './PostHome.css';\nimport Axios from 'axios'\nimport PostComment from './PostComment';\nimport Anonyme from '../../img/anonyme.png'\nimport DefaultPost from '../../img/defaultPost.png'\nimport grayThumb from '../../img/thumb_gray.png'\nimport blueThumb from '../../img/thumb_blue.png'\nimport redThumb from '../../img/thumb_red.png'\nimport Trash from '../../img/trash.png'\n\n\n\nclass PostHome extends Component {\n\n  state = {\n    description: '',\n    selectedFile: 'null',\n    postArray: [],\n    showCommentIdPost: -1,\n    comments: [],\n    inputCommentValue: '',\n    likes: []\n}\n\ncomponentDidMount () {\n   this.updatePost()\n}\n\nupdatePost () {\n\n  let getTokenStringify = localStorage.getItem(\"token\");\n  let getToken = JSON.parse(getTokenStringify);\n\n  Axios.get(`${process.env.REACT_APP_API_URL}/getPost`, { headers: {\"Authorization\" : `Bearer ${getToken[0]}`} }).then((response) => {\n\n      let postArray = response.data.reverse()\n      this.setState({ postArray })\n\n  })\n\n  this.updateLikes()\n\n}\n\nupdateLikes () {\n  let getTokenStringify = localStorage.getItem(\"token\");\n  let getToken = JSON.parse(getTokenStringify);\n\n  Axios.get(`${process.env.REACT_APP_API_URL}/getLikes`, { headers: {\"Authorization\" : `Bearer ${getToken[0]}`} }).then((response) => {\n\n    console.log(response.data)\n    this.setState({ likes: response.data })\n\n\n  })\n}\n\n\naddPost = () => {\n\n  let getTokenStringify = localStorage.getItem(\"token\");\n  let getToken = JSON.parse(getTokenStringify);\n\n  var formData = new FormData();\n  if (this.state.selectedFile !== null) {\n    formData.append(\"image\", this.state.selectedFile);\n  }\n    formData.append(\"description\", this.state.description);\n\n  Axios.post(`${process.env.REACT_APP_API_URL}/addPost`, formData, { headers: {\"Authorization\" : `Bearer ${getToken[0]}`} }).then(() => {\n          this.updatePost()\n          this.setState({ \n            description: '',\n            selectedFile: null\n          })\n    })\n\n}\n\n\nfileSelectedHandler = (e) => {\n  this.setState({ selectedFile: e.target.files[0] })\n}\n\nhandleDescription = (e) => {\n  const description = e.target.value\n  this.setState({ description })\n}\n\nhandleShowComment = (postId) => {\n\n    if (this.state.showCommentIdPost === -1) {\n      this.setState({ showCommentIdPost: postId })\n      this.getComment(postId)\n    } else {\n      if (this.state.showCommentIdPost === postId) {\n        this.setState({ showCommentIdPost: -1 })\n      } else {\n        this.setState({ showCommentIdPost: postId })\n        this.getComment(postId)\n      }\n    }\n}\n\ngetComment = (postId) => {\n\n    this.setState({ comments: [] })\n\n    let getTokenStringify = localStorage.getItem(\"token\");\n    let getToken = JSON.parse(getTokenStringify);\n\n    Axios.get(`${process.env.REACT_APP_API_URL}/getComments/${postId}`, { headers: {\"Authorization\" : `Bearer ${getToken[0]}`} }).then((response) => {\n        this.setState({ comments: response.data })\n    })\n\n}\n\naddCommentChange = (e) => {\n  this.setState({ inputCommentValue: e.target.value })\n}\n\naddCommentPress = (e, idposts, userProfil) => {\n\n  if (e.key === 'Enter') {\n\n      let getTokenStringify = localStorage.getItem(\"token\");\n      let getToken = JSON.parse(getTokenStringify);\n\n      Axios.post(`${process.env.REACT_APP_API_URL}/addComment`, {\n          postId: idposts+'',\n          comment: e.target.value+''\n      }, { headers: {\"Authorization\" : `Bearer ${getToken[0]}`} }).then(() => {\n          \n          let comments = this.state.comments\n          comments.push({\n            comment: e.target.value+'',\n            idComment: 0,\n            postId: idposts,\n            userId: getToken[0],\n            username: userProfil.username,\n            profilimage: userProfil.image_url\n          })\n          this.setState({ comments: comments})\n          this.setState({ inputCommentValue: ''}) \n      })\n  } \n}\n\naddDefaultSrc(ev){\n  ev.target.src = Anonyme\n}\n\ndefaultPostImageSrc(ev){\n  ev.target.src = DefaultPost\n}\n\ndeletePost = (post) => {\n  let getTokenStringify = localStorage.getItem(\"token\");\n  let getToken = JSON.parse(getTokenStringify);\n\n  Axios.delete(`${process.env.REACT_APP_API_URL}/deletePost/${post}`,\n  { headers: {\"Authorization\" : `Bearer ${getToken[0]}`}}).then((response) => {\n      this.updatePost() \n  })\n}\n\nthumb = (thumb, idposts) => {\n  console.log(thumb + ' ' + idposts)\n\n  let getTokenStringify = localStorage.getItem(\"token\");\n  let getToken = JSON.parse(getTokenStringify);\n\n  Axios.put(`${process.env.REACT_APP_API_URL}/likes`, {\n    thumb: thumb,\n    post: idposts\n  }, { headers: {\"Authorization\" : `Bearer ${getToken[0]}`}}).then((response) => {\n      this.updateLikes() \n  })\n\n}\n\n render() {\n\n    const user = this.props.userProfil\n\n    let addPost = []\n    \n    this.state.postArray.forEach((post, postIndex) => {\n      \n      const comments = []\n      if(post.idposts === this.state.showCommentIdPost) {\n        comments.push(\n          <PostComment\n            key={'comment' + postIndex}\n            comments={this.state.comments}\n            idposts={post.idposts}\n            addCommentChange={this.addCommentChange}\n            addCommentPress={this.addCommentPress}\n            inputCommentValue={this.state.inputCommentValue}\n            userProfil={this.props.userProfil}\n          >\n          </PostComment>\n        )\n      }\n\n      let heightDiv;\n      if (post.urlimage.length < 1) {\n        heightDiv = {\n          height: '120px'\n        }\n      }\n\n      let administratorBtn = []\n      if (user.isadministrator) {\n        administratorBtn.push(<img key={'trash'+post.idposts} onClick={() => this.deletePost(post.idposts)} className='trash' src={Trash} alt=\"trash\" />)\n      }\n\n      let thumbUp = grayThumb\n      let thumbDown = grayThumb\n      this.state.likes.forEach()\n\n\n      addPost.push(\n        <div key={'post' + post.idposts}>\n          <div className=\"postDiv\" style={heightDiv}>\n              <div className='userPostContainer'>\n                  <img className='imageUserPost' onError={this.addDefaultSrc} src={post.profilimage} alt={'userProfil'}/>\n                  <h3 className='usernamePost'>\n                      publication de {post.username}\n                  </h3>\n                  {administratorBtn}\n              </div>\n            <p className=\"descriptionPost\">{post.description}</p>\n            <img onError={this.defaultPostImageSrc} className=\"imagePost\" src={post.urlimage} alt={`post ${post.idposts}`} />\n            <div id=\"thumbContainer\">\n                <img onClick={() => this.thumb('up', post.idposts)} className=\"thumb_up\" src={thumbUp} alt='thumb_up' />\n                <img onClick={() => this.thumb('down', post.idposts)} className=\"thumb_down\" src={thumbDown} alt='thumb_down' />\n            </div>\n            <button \n              onClick={() => this.handleShowComment(post.idposts)} \n              className=\"showAddCommentBtn\">\n                ...\n            </button>\n          </div>\n          {comments}\n        </div>)\n\n    });\n\n    return (\n\n      <div id=\"postView\">\n        {addPost}\n        <div id=\"lastDiv\"></div>\n        <div id=\"homeBottomBar\">\n          <div id=\"inputPost\">\n            <input \n              type=\"text\" \n              id=\"description\" \n              value={this.state.description} \n              placeholder=\"Description\" \n              onChange={this.handleDescription}\n            />\n            <input type=\"file\" onChange={this.fileSelectedHandler}/>\n          </div>\n            <button id=\"addPostBtn\" onClick={this.addPost}>+</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PostHome;\n"]},"metadata":{},"sourceType":"module"}